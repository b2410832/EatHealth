[{"/Users/rosechen/EatHealth/eat-health/src/App.js":"1","/Users/rosechen/EatHealth/eat-health/src/index.js":"2","/Users/rosechen/EatHealth/eat-health/src/reportWebVitals.js":"3","/Users/rosechen/EatHealth/eat-health/src/Components/Header/Header.js":"4","/Users/rosechen/EatHealth/eat-health/src/Components/WriteRecipe/WriteRecipe.js":"5","/Users/rosechen/EatHealth/eat-health/src/Components/Footer/Footer.js":"6","/Users/rosechen/EatHealth/eat-health/src/Components/Ingredients/Ingredients.js":"7","/Users/rosechen/EatHealth/eat-health/src/Components/Home/Home.js":"8","/Users/rosechen/EatHealth/eat-health/src/Components/SignUp/SignUp.js":"9","/Users/rosechen/EatHealth/eat-health/src/Components/LogIn/LogIn.js":"10","/Users/rosechen/EatHealth/eat-health/src/PrivateRoute.js":"11","/Users/rosechen/EatHealth/eat-health/src/Components/RecipeList/RecipeList.js":"12","/Users/rosechen/EatHealth/eat-health/src/Components/Recipe/Recipe.js":"13","/Users/rosechen/EatHealth/eat-health/src/Components/Chart/Chart.js":"14","/Users/rosechen/EatHealth/eat-health/src/Components/Profile/Profile.js":"15","/Users/rosechen/EatHealth/eat-health/src/Components/Recipes/Recipes.js":"16","/Users/rosechen/EatHealth/eat-health/src/Components/Comments/Comments.js":"17","/Users/rosechen/EatHealth/eat-health/src/Components/RecipeListItem/RecipeListItem.js":"18","/Users/rosechen/EatHealth/eat-health/src/Components/SubProfile/SubProfile.js":"19","/Users/rosechen/EatHealth/eat-health/src/Components/FollowList/FollowList.js":"20","/Users/rosechen/EatHealth/eat-health/src/Components/Steps/Steps.js":"21","/Users/rosechen/EatHealth/eat-health/src/Components/CategoryBox/CategoryBox.js":"22","/Users/rosechen/EatHealth/eat-health/src/Components/RecommendedBox/RecommendedBox.js":"23","/Users/rosechen/EatHealth/eat-health/src/Components/Loading/Loading.js":"24","/Users/rosechen/EatHealth/eat-health/src/Components/Modal/Modal.js":"25","/Users/rosechen/EatHealth/eat-health/src/Components/Alert/Alert.js":"26","/Users/rosechen/EatHealth/eat-health/src/utils/firebase.js":"27","/Users/rosechen/EatHealth/eat-health/src/Components/UploadCoverPhoto/UploadCoverPhoto.js":"28"},{"size":2427,"mtime":1609732492216,"results":"29","hashOfConfig":"30"},{"size":587,"mtime":1609723130529,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1606282798157,"results":"32","hashOfConfig":"30"},{"size":8503,"mtime":1609742709473,"results":"33","hashOfConfig":"30"},{"size":11273,"mtime":1609723130432,"results":"34","hashOfConfig":"30"},{"size":298,"mtime":1609723130403,"results":"35","hashOfConfig":"30"},{"size":3167,"mtime":1610171258803,"results":"36","hashOfConfig":"30"},{"size":10107,"mtime":1609742158626,"results":"37","hashOfConfig":"30"},{"size":3780,"mtime":1609723130426,"results":"38","hashOfConfig":"30"},{"size":3566,"mtime":1609723130411,"results":"39","hashOfConfig":"30"},{"size":396,"mtime":1609723130433,"results":"40","hashOfConfig":"30"},{"size":3387,"mtime":1609723130418,"results":"41","hashOfConfig":"30"},{"size":13451,"mtime":1609727360820,"results":"42","hashOfConfig":"30"},{"size":683,"mtime":1609727050134,"results":"43","hashOfConfig":"30"},{"size":4978,"mtime":1609728671758,"results":"44","hashOfConfig":"30"},{"size":2956,"mtime":1609723130423,"results":"45","hashOfConfig":"30"},{"size":5739,"mtime":1609727113648,"results":"46","hashOfConfig":"30"},{"size":1989,"mtime":1609731249905,"results":"47","hashOfConfig":"30"},{"size":647,"mtime":1609723130429,"results":"48","hashOfConfig":"30"},{"size":4741,"mtime":1609723130401,"results":"49","hashOfConfig":"30"},{"size":3748,"mtime":1609723130428,"results":"50","hashOfConfig":"30"},{"size":1372,"mtime":1609723130396,"results":"51","hashOfConfig":"30"},{"size":1680,"mtime":1609723130425,"results":"52","hashOfConfig":"30"},{"size":229,"mtime":1609727181713,"results":"53","hashOfConfig":"30"},{"size":590,"mtime":1609723130413,"results":"54","hashOfConfig":"30"},{"size":486,"mtime":1608794218937,"results":"55","hashOfConfig":"30"},{"size":8504,"mtime":1609732139594,"results":"56","hashOfConfig":"30"},{"size":1185,"mtime":1609723130430,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17pns1l",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/Users/rosechen/EatHealth/eat-health/src/App.js",["119"],"/Users/rosechen/EatHealth/eat-health/src/index.js",[],["120","121"],"/Users/rosechen/EatHealth/eat-health/src/reportWebVitals.js",[],["122","123"],"/Users/rosechen/EatHealth/eat-health/src/Components/Header/Header.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/WriteRecipe/WriteRecipe.js",["124","125"],"/Users/rosechen/EatHealth/eat-health/src/Components/Footer/Footer.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Ingredients/Ingredients.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Home/Home.js",[],["126","127"],"/Users/rosechen/EatHealth/eat-health/src/Components/SignUp/SignUp.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/LogIn/LogIn.js",[],"/Users/rosechen/EatHealth/eat-health/src/PrivateRoute.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/RecipeList/RecipeList.js",["128"],"/Users/rosechen/EatHealth/eat-health/src/Components/Recipe/Recipe.js",["129"],"import { Link, useParams } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHeart,\n  faCommentAlt,\n  faBookmark,\n} from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  faHeart as faFullHeart,\n  faBookmark as faFullBookmark,\n  faCheck,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport {\n  toggleFollowing,\n  toggleFavorite,\n  toggleLiked,\n  getRealtimeRecipe,\n  getRealtimeFans,\n  getRealtimeRecipeLikes,\n  updateRecipe,\n  getRealtimeRecipeComments,\n  getRealtimeIsLiked,\n  getRealtimeIsFavorite,\n  getRealtimeFollowings,\n} from \"../../utils/firebase\";\nimport styles from \"./Recipe.module.scss\";\nimport tipsBulb from \"../../images/tips-bulb.svg\";\n\nimport Chart from \"../Chart/Chart\";\nimport Comments from \"../Comments/Comments\";\nimport CategoryBox from \"../CategoryBox/CategoryBox\";\nimport RecommendedBox from \"../RecommendedBox/RecommendedBox\";\nimport Alert from \"../Alert/Alert\";\n\nconst Recipe = ({ user }) => {\n  let { recipeId } = useParams();\n\n  const [recipe, setRecipe] = useState({});\n  const [nutrition, setNutrition] = useState({\n    calories: 0,\n    carbsQty: 0,\n    proteinQty: 0,\n    fatQty: 0,\n    proteinPercentage: 100,\n    fatPercentage: 100,\n    carbsPercentage: 100,\n  });\n  const [isLiked, setIsLiked] = useState(false);\n  const [isAdded, setIsAdded] = useState(false);\n  const [isFollowing, setIsfollowing] = useState(false);\n  const [isMyself, setIsMyself] = useState(false);\n  const [authorFans, setAuthorFans] = useState(0);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertText, setAlertText] = useState(\"\");\n\n  const sumNutritionQty = (ingredients, nutrient) => {\n    return Math.round(\n      ingredients.reduce((total, ingredient) => {\n        return ingredient[nutrient] * (ingredient.qty / 100) + total;\n      }, 0)\n    );\n  };\n\n  const countNutritionPercentage = (\n    nutrientQty,\n    totalCalories,\n    caloriesPerGram\n  ) => {\n    return Math.round(((nutrientQty * caloriesPerGram) / totalCalories) * 100);\n  };\n\n  const countNutritionalFacts = (ingredients) => {\n    const calories = sumNutritionQty(ingredients, \"calorie\");\n    const carbsQty = sumNutritionQty(ingredients, \"carb\");\n    const proteinQty = sumNutritionQty(ingredients, \"protein\");\n    const fatQty = sumNutritionQty(ingredients, \"fat\");\n    const proteinPercentage = countNutritionPercentage(proteinQty, calories, 4);\n    const fatPercentage = countNutritionPercentage(fatQty, calories, 9);\n    const carbsPercentage = 100 - (proteinPercentage + fatPercentage);\n    return {\n      calories,\n      carbsQty,\n      proteinQty,\n      fatQty,\n      proteinPercentage,\n      fatPercentage,\n      carbsPercentage,\n    };\n  };\n\n  useEffect(() => {\n    setNutrition({\n      calories: 0,\n      carbsQty: 0,\n      proteinQty: 0,\n      fatQty: 0,\n      proteinPercentage: 100,\n      fatPercentage: 100,\n      carbsPercentage: 100,\n    });\n    setIsLiked(false);\n    setIsAdded(false);\n    setIsfollowing(false);\n    setIsMyself(false);\n\n    const unsubscribeRecipe = getRealtimeRecipe(recipeId, (recipeDoc) => {\n      if (recipeDoc.exists) {\n        // update recipe's details\n        const recipe = recipeDoc.data();\n        setRecipe(recipe);\n        const nutritionalFacts = countNutritionalFacts(recipe.ingredients);\n        setNutrition(nutritionalFacts);\n        getRealtimeFans(recipe.authorId, (fans) => setAuthorFans(fans.size));\n        getRealtimeRecipeLikes(recipe.id, (likes) =>\n          updateRecipe(recipe.id, { liked: likes.length })\n        );\n        getRealtimeRecipeComments(recipe.id, (comments) =>\n          updateRecipe(recipe.id, { comments: comments.length })\n        );\n\n        // update user's liked, favorite, following\n        if (user) {\n          getRealtimeIsLiked(user.uid, (likedRecipes) => {\n            setIsLiked(false); //\n            likedRecipes.forEach((likedRecipe) => {\n              if (likedRecipe.id === recipeId) {\n                return setIsLiked(true);\n              }\n            });\n          });\n          getRealtimeIsFavorite(user.uid, (favoriteRecipes) => {\n            setIsAdded(false); //\n            favoriteRecipes.forEach((favoriteRecipe) => {\n              if (favoriteRecipe.id === recipeId) {\n                return setIsAdded(true);\n              }\n            });\n          });\n          if (user.uid === recipe.authorId) {\n            setIsMyself(true);\n          } else {\n            getRealtimeFollowings(user.uid, (followings) => {\n              setIsfollowing(false); //\n              followings.forEach((following) => {\n                if (following.id === recipe.authorId) {\n                  return setIsfollowing(true);\n                }\n              });\n            });\n            setIsMyself(false);\n          }\n        }\n      }\n    });\n    return () => {\n      unsubscribeRecipe();\n    };\n  }, [recipe.authorId, recipeId]);\n\n  const handleToggleLiked = () => {\n    if (user) {\n      toggleLiked(user.uid, recipeId);\n    } else {\n      setShowAlert(true);\n      setAlertText(\"請先登入會員才能按讚哦！\");\n    }\n  };\n\n  const handleToggleFavorite = () => {\n    if (user) {\n      toggleFavorite(user.uid, recipeId);\n    } else {\n      setShowAlert(true);\n      setAlertText(\"請先登入會員才能收藏哦！\");\n    }\n  };\n\n  const handleToggleFollowing = () => {\n    if (user) {\n      toggleFollowing(user.uid, recipe.authorId);\n    } else {\n      setShowAlert(true);\n      setAlertText(\"請先登入會員才能追蹤哦！\");\n    }\n  };\n\n  const toggleAlert = () => {\n    setShowAlert(!showAlert);\n  };\n\n  return (\n    <main className={styles.container}>\n      <div className={styles.recipeContainer}>\n        <div className={styles.recipe}>\n          <div className={styles.title}>{recipe.title}</div>\n          <div className={styles.tag}>\n            <small>{recipe.category}</small>\n            <small>{recipe.mealTime}</small>\n          </div>\n          <div className={styles.main}>\n            <div className={styles.image}>\n              <img src={recipe.image} alt=\"食譜照片\"></img>\n            </div>\n            <div className={styles.about}>\n              <div className={styles.author}>\n                <Link to={`/profile/${recipe.authorId}/myRecipes`}>\n                  <div className={styles.profile}>\n                    <img src={recipe.authorPhotoURL} alt=\"\"></img>\n                  </div>\n                </Link>\n                <div>\n                  <Link to={`/profile/${recipe.authorId}/myRecipes`}>\n                    <div className={styles.name}>{recipe.authorName}</div>\n                  </Link>\n                  <div>{authorFans} 個粉絲</div>\n                </div>\n                {isMyself === false &&\n                  (isFollowing ? (\n                    <button\n                      className={styles.greyBtn}\n                      onClick={handleToggleFollowing}\n                    >\n                      <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>\n                      &nbsp;已追蹤\n                    </button>\n                  ) : (\n                    <button\n                      className={styles.darkBtn}\n                      onClick={handleToggleFollowing}\n                    >\n                      追蹤\n                    </button>\n                  ))}\n              </div>\n\n              <div className={styles.likeComment}>\n                <div>\n                  <FontAwesomeIcon\n                    icon={faHeart}\n                    style={{ color: \"#8a949f\" }}\n                  />\n                  <span>{recipe.liked} 個讚</span>\n                </div>\n                <div>\n                  <FontAwesomeIcon\n                    icon={faCommentAlt}\n                    style={{ color: \"#8a949f\" }}\n                  />\n                  <span>{recipe.comments} 則留言</span>\n                </div>\n              </div>\n              <div className={styles.summary}>{recipe.summary}</div>\n              <div className={styles.btnGroup}>\n                <div className={styles.btn} onClick={handleToggleLiked}>\n                  {isLiked ? (\n                    <button className={styles.lineBtn}>\n                      <FontAwesomeIcon\n                        icon={faFullHeart}\n                        style={{ color: \"#fc4b4e\", marginRight: \"5px\" }}\n                      />\n                      已按讚\n                    </button>\n                  ) : (\n                    <button className={styles.lineBtn}>\n                      <FontAwesomeIcon\n                        icon={faHeart}\n                        style={{ color: \"#888888\", marginRight: \"5px\" }}\n                      />\n                      按讚\n                    </button>\n                  )}\n                </div>\n                <div className={styles.btn} onClick={handleToggleFavorite}>\n                  {isAdded ? (\n                    <button className={styles.lineBtn}>\n                      <FontAwesomeIcon\n                        icon={faFullBookmark}\n                        style={{ color: \"#3f3d56\", marginRight: \"5px\" }}\n                      />\n                      已收藏\n                    </button>\n                  ) : (\n                    <button className={styles.lineBtn}>\n                      <FontAwesomeIcon\n                        icon={faBookmark}\n                        style={{ color: \"#888888\", marginRight: \"5px\" }}\n                      />\n                      收藏\n                    </button>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className={styles.information}>\n            <div className={styles.head}>\n              <div className={styles.texts}>熱量</div>\n              <div>\n                <strong>{nutrition.calories}</strong> 大卡\n              </div>\n            </div>\n            <div className={styles.head}>\n              <div className={styles.texts}>份量</div>\n              <div>\n                <strong>{recipe.portion}</strong> 人份\n              </div>\n            </div>\n            <div className={styles.head}>\n              <div className={styles.texts}>時間</div>\n              <div>\n                <strong>{recipe.cookTime}</strong> 分鐘\n              </div>\n            </div>\n            <div className={styles.body}>\n              <Chart color={\"#85bf3e\"} percentage={nutrition.carbsPercentage} />\n              <div className={styles.texts}>\n                <span className={styles.dot1}></span>碳水化合物\n              </div>\n              <div>\n                <strong>{nutrition.carbsQty}</strong> 克\n              </div>\n            </div>\n            <div className={styles.body}>\n              <Chart\n                color={\"#fec740\"}\n                percentage={nutrition.proteinPercentage}\n              />\n              <div className={styles.texts}>\n                <span className={styles.dot2}></span>蛋白質\n              </div>\n              <div>\n                <strong>{nutrition.proteinQty}</strong> 克\n              </div>\n            </div>\n            <div className={styles.body}>\n              <Chart color={\"#ff9300\"} percentage={nutrition.fatPercentage} />\n              <div className={styles.texts}>\n                <span className={styles.dot3}></span>脂肪\n              </div>\n              <div>\n                <strong>{nutrition.fatQty}</strong> 克\n              </div>\n            </div>\n          </div>\n          <div>\n            <div className={styles.texts}>食材</div>\n            {recipe.ingredients\n              ? recipe.ingredients.map((item) => {\n                  return (\n                    <div className={styles.ingredient} key={item.id}>\n                      <div>{item.name}</div>\n                      <div>{item.qty} 公克</div>\n                    </div>\n                  );\n                })\n              : null}\n          </div>\n          <div>\n            <div className={styles.texts}>步驟</div>\n            {recipe.steps\n              ? recipe.steps.map((step, index) => {\n                  return (\n                    <div className={styles.step} key={step.uid}>\n                      <div className={styles.photo}>\n                        {step.imageUrl ? (\n                          <img\n                            src={step.imageUrl}\n                            alt={`步驟${index + 1}`}\n                          ></img>\n                        ) : (\n                          <div></div>\n                        )}\n                      </div>\n                      <div className={styles.content}>\n                        <div className={styles.stepNumber}>{index + 1}.</div>\n                        <p>{step.text}</p>\n                      </div>\n                    </div>\n                  );\n                })\n              : null}\n          </div>\n          <div className={styles.tips}>\n            <img src={tipsBulb} alt=\"小叮嚀\" style={{ width: \"30px\" }} />\n            <span className={styles.title}>\n              <mark>小叮嚀</mark>\n            </span>\n            <div>{recipe.tips}</div>\n          </div>\n        </div>\n        <Comments user={user} />\n      </div>\n      <div className={styles.side}>\n        <RecommendedBox />\n        <CategoryBox />\n      </div>\n      {showAlert && <Alert text={alertText} handelConfirm={toggleAlert} />}\n    </main>\n  );\n};\n\nexport default Recipe;\n","/Users/rosechen/EatHealth/eat-health/src/Components/Chart/Chart.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Profile/Profile.js",["130"],"/Users/rosechen/EatHealth/eat-health/src/Components/Recipes/Recipes.js",["131"],"/Users/rosechen/EatHealth/eat-health/src/Components/Comments/Comments.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/RecipeListItem/RecipeListItem.js",["132"],"/Users/rosechen/EatHealth/eat-health/src/Components/SubProfile/SubProfile.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/FollowList/FollowList.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Steps/Steps.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/CategoryBox/CategoryBox.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/RecommendedBox/RecommendedBox.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Loading/Loading.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Modal/Modal.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Alert/Alert.js",[],["133","134"],"/Users/rosechen/EatHealth/eat-health/src/utils/firebase.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/UploadCoverPhoto/UploadCoverPhoto.js",[],{"ruleId":"135","severity":1,"message":"136","line":2,"column":27,"nodeType":"137","messageId":"138","endLine":2,"endColumn":33},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"139","replacedBy":"143"},{"ruleId":"141","replacedBy":"144"},{"ruleId":"135","severity":1,"message":"145","line":5,"column":32,"nodeType":"137","messageId":"138","endLine":5,"endColumn":42},{"ruleId":"146","severity":1,"message":"147","line":127,"column":6,"nodeType":"148","endLine":127,"endColumn":21,"suggestions":"149"},{"ruleId":"139","replacedBy":"150"},{"ruleId":"141","replacedBy":"151"},{"ruleId":"146","severity":1,"message":"152","line":49,"column":6,"nodeType":"148","endLine":49,"endColumn":18,"suggestions":"153"},{"ruleId":"146","severity":1,"message":"154","line":160,"column":6,"nodeType":"148","endLine":160,"endColumn":33,"suggestions":"155"},{"ruleId":"146","severity":1,"message":"156","line":75,"column":6,"nodeType":"148","endLine":75,"endColumn":14,"suggestions":"157"},{"ruleId":"135","severity":1,"message":"158","line":2,"column":19,"nodeType":"137","messageId":"138","endLine":2,"endColumn":25},{"ruleId":"146","severity":1,"message":"159","line":26,"column":6,"nodeType":"148","endLine":26,"endColumn":8,"suggestions":"160"},{"ruleId":"139","replacedBy":"161"},{"ruleId":"141","replacedBy":"162"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["163"],"no-negated-in-lhs",["164"],["163"],["164"],"'postRecipe' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postRecipe'. Either include it or remove the dependency array.","ArrayExpression",["165"],["163"],["164"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["166"],"React Hook useEffect has missing dependencies: 'countNutritionalFacts' and 'user'. Either include them or remove the dependency array.",["167"],"React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["168"],"'Switch' is defined but never used.","React Hook useEffect has missing dependencies: 'recipe.id' and 'recipeData'. Either include them or remove the dependency array. You can also do a functional update 'setRecipeData(r => ...)' if you only need 'recipeData' in the 'setRecipeData' call.",["169"],["163"],["164"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},"Update the dependencies array to be: [coverPhotoUrl, postRecipe]",{"range":"180","text":"181"},"Update the dependencies array to be: [subProfile, userId]",{"range":"182","text":"183"},"Update the dependencies array to be: [countNutritionalFacts, recipe.authorId, recipeId, user]",{"range":"184","text":"185"},"Update the dependencies array to be: [user.uid, userId]",{"range":"186","text":"187"},"Update the dependencies array to be: [recipe.id, recipeData]",{"range":"188","text":"189"},[3552,3567],"[coverPhotoUrl, postRecipe]",[1520,1532],"[subProfile, userId]",[4890,4917],"[countNutritionalFacts, recipe.authorId, recipeId, user]",[2011,2019],"[user.uid, userId]",[871,873],"[recipe.id, recipeData]"]
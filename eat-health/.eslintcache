[{"/Users/rosechen/EatHealth/eat-health/src/App.js":"1","/Users/rosechen/EatHealth/eat-health/src/index.js":"2","/Users/rosechen/EatHealth/eat-health/src/reportWebVitals.js":"3","/Users/rosechen/EatHealth/eat-health/src/Components/Header/Header.js":"4","/Users/rosechen/EatHealth/eat-health/src/Components/WriteRecipe/WriteRecipe.js":"5","/Users/rosechen/EatHealth/eat-health/src/Components/Footer/Footer.js":"6","/Users/rosechen/EatHealth/eat-health/src/Components/Ingredients/Ingredients.js":"7","/Users/rosechen/EatHealth/eat-health/src/Components/Home/Home.js":"8","/Users/rosechen/EatHealth/eat-health/src/Components/SignUp/SignUp.js":"9","/Users/rosechen/EatHealth/eat-health/src/Components/LogIn/LogIn.js":"10","/Users/rosechen/EatHealth/eat-health/src/PrivateRoute.js":"11","/Users/rosechen/EatHealth/eat-health/src/Components/RecipeList/RecipeList.js":"12","/Users/rosechen/EatHealth/eat-health/src/Components/Recipe/Recipe.js":"13","/Users/rosechen/EatHealth/eat-health/src/Components/Chart/Chart.js":"14","/Users/rosechen/EatHealth/eat-health/src/Components/Profile/Profile.js":"15","/Users/rosechen/EatHealth/eat-health/src/Components/Recipes/Recipes.js":"16","/Users/rosechen/EatHealth/eat-health/src/Components/Comments/Comments.js":"17","/Users/rosechen/EatHealth/eat-health/src/Components/RecipeListItem/RecipeListItem.js":"18","/Users/rosechen/EatHealth/eat-health/src/Components/SubProfile/SubProfile.js":"19","/Users/rosechen/EatHealth/eat-health/src/Components/FollowList/FollowList.js":"20","/Users/rosechen/EatHealth/eat-health/src/Components/Steps/Steps.js":"21","/Users/rosechen/EatHealth/eat-health/src/Components/CategoryBox/CategoryBox.js":"22","/Users/rosechen/EatHealth/eat-health/src/Components/RecommendedBox/RecommendedBox.js":"23","/Users/rosechen/EatHealth/eat-health/src/Components/Loading/Loading.js":"24","/Users/rosechen/EatHealth/eat-health/src/Components/Modal/Modal.js":"25","/Users/rosechen/EatHealth/eat-health/src/Components/Alert/Alert.js":"26","/Users/rosechen/EatHealth/eat-health/src/utils/firebase.js":"27","/Users/rosechen/EatHealth/eat-health/src/Components/UploadCoverPhoto/UploadCoverPhoto.js":"28","/Users/rosechen/EatHealth/eat-health/src/utils/firebaseConfig.js":"29"},{"size":2413,"mtime":1611127454974,"results":"30","hashOfConfig":"31"},{"size":588,"mtime":1611121568961,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1606282798157,"results":"33","hashOfConfig":"31"},{"size":9053,"mtime":1610201095017,"results":"34","hashOfConfig":"31"},{"size":11211,"mtime":1610861494334,"results":"35","hashOfConfig":"31"},{"size":298,"mtime":1609723130403,"results":"36","hashOfConfig":"31"},{"size":3108,"mtime":1610287811525,"results":"37","hashOfConfig":"31"},{"size":10095,"mtime":1610287811524,"results":"38","hashOfConfig":"31"},{"size":3989,"mtime":1610287811533,"results":"39","hashOfConfig":"31"},{"size":3775,"mtime":1611127430651,"results":"40","hashOfConfig":"31"},{"size":396,"mtime":1609723130433,"results":"41","hashOfConfig":"31"},{"size":3387,"mtime":1609723130418,"results":"42","hashOfConfig":"31"},{"size":13800,"mtime":1611128530431,"results":"43","hashOfConfig":"31"},{"size":597,"mtime":1610201095008,"results":"44","hashOfConfig":"31"},{"size":5160,"mtime":1611128747405,"results":"45","hashOfConfig":"31"},{"size":3022,"mtime":1610287811531,"results":"46","hashOfConfig":"31"},{"size":5772,"mtime":1610201095009,"results":"47","hashOfConfig":"31"},{"size":2009,"mtime":1610201095021,"results":"48","hashOfConfig":"31"},{"size":647,"mtime":1609723130429,"results":"49","hashOfConfig":"31"},{"size":4741,"mtime":1609723130401,"results":"50","hashOfConfig":"31"},{"size":3748,"mtime":1609723130428,"results":"51","hashOfConfig":"31"},{"size":1372,"mtime":1609723130396,"results":"52","hashOfConfig":"31"},{"size":1680,"mtime":1609723130425,"results":"53","hashOfConfig":"31"},{"size":214,"mtime":1610201095019,"results":"54","hashOfConfig":"31"},{"size":590,"mtime":1610272644057,"results":"55","hashOfConfig":"31"},{"size":486,"mtime":1609723130394,"results":"56","hashOfConfig":"31"},{"size":8112,"mtime":1611127665577,"results":"57","hashOfConfig":"31"},{"size":1185,"mtime":1609723130430,"results":"58","hashOfConfig":"31"},{"size":779,"mtime":1611125304465,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17pns1l",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"73"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"69"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"114"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rosechen/EatHealth/eat-health/src/App.js",["127"],"/Users/rosechen/EatHealth/eat-health/src/index.js",[],"/Users/rosechen/EatHealth/eat-health/src/reportWebVitals.js",[],["128","129"],"/Users/rosechen/EatHealth/eat-health/src/Components/Header/Header.js",[],["130","131"],"/Users/rosechen/EatHealth/eat-health/src/Components/WriteRecipe/WriteRecipe.js",["132"],"import { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { uploadImageToStorage, postRecipe } from \"../../utils/firebase\";\nimport styles from \"./WriteRecipe.module.scss\";\nimport tipsBulb from \"../../images/tips-bulb.svg\";\nimport defaultImg from \"../../images/upload.png\";\n\nimport UploadCoverPhoto from \"../UploadCoverPhoto/UploadCoverPhoto\";\nimport Ingredients from \"../Ingredients/Ingredients\";\nimport Steps from \"../Steps/Steps\";\nimport Loading from \"../Loading/Loading\";\nimport Modal from \"../Modal/Modal\";\nimport Alert from \"../Alert/Alert\";\n\n// react-select options\nconst recipeType = [\n  { value: 0, label: \"均衡料理\", name: \"category\" },\n  { value: 1, label: \"減醣料理\", name: \"category\" },\n  { value: 2, label: \"增肌料理\", name: \"category\" },\n];\nconst recipeTime = [\n  { value: 0, label: \"早餐\", name: \"mealTime\" },\n  { value: 1, label: \"午晚餐\", name: \"mealTime\" },\n  { value: 2, label: \"點心\", name: \"mealTime\" },\n];\nconst portion = [\n  { value: 0, label: \"1\", name: \"portion\" },\n  { value: 1, label: \"2\", name: \"portion\" },\n  { value: 2, label: \"3\", name: \"portion\" },\n  { value: 3, label: \"4\", name: \"portion\" },\n  { value: 4, label: \"5\", name: \"portion\" },\n  { value: 5, label: \"6\", name: \"portion\" },\n  { value: 6, label: \"7\", name: \"portion\" },\n  { value: 7, label: \"8\", name: \"portion\" },\n  { value: 8, label: \"9\", name: \"portion\" },\n  { value: 9, label: \"10+\", name: \"portion\" },\n];\nconst cookTime = [\n  { value: 0, label: \"5\", name: \"cookTime\" },\n  { value: 1, label: \"10\", name: \"cookTime\" },\n  { value: 2, label: \"15\", name: \"cookTime\" },\n  { value: 3, label: \"20\", name: \"cookTime\" },\n  { value: 4, label: \"30\", name: \"cookTime\" },\n  { value: 5, label: \"45\", name: \"cookTime\" },\n  { value: 6, label: \"60\", name: \"cookTime\" },\n  { value: 7, label: \"90\", name: \"cookTime\" },\n  { value: 8, label: \"120+\", name: \"cookTime\" },\n];\n\nconst WriteRecipe = ({ user }) => {\n  let history = useHistory();\n\n  const [inputs, setInputs] = useState({\n    title: \"\",\n    category: \"\",\n    mealTime: \"\",\n    summary: \"\",\n    portion: \"\",\n    cookTime: \"\",\n    tips: \"\",\n  });\n  const [ingredients, setIngredients] = useState([\n    {\n      uid: `${new Date().getTime()}-1`,\n      value: \"\",\n      label: \"\",\n      id: \"\",\n      type: \"\",\n      name: \"\",\n      calorie: 0,\n      carb: 0,\n      protein: 0,\n      fat: 0,\n      qty: \"\",\n    },\n    {\n      uid: `${new Date().getTime()}-2`,\n      value: \"\",\n      label: \"\",\n      id: \"\",\n      type: \"\",\n      name: \"\",\n      calorie: 0,\n      carb: 0,\n      protein: 0,\n      fat: 0,\n      qty: \"\",\n    },\n  ]);\n  const [steps, setSteps] = useState([\n    {\n      uid: `${new Date().getTime()}-1`,\n      text: \"\",\n      imageUrl: null,\n      objectUrl: defaultImg,\n      file: null,\n    },\n    {\n      uid: `${new Date().getTime()}-2`,\n      text: \"\",\n      imageUrl: null,\n      objectUrl: defaultImg,\n      file: null,\n    },\n    {\n      uid: `${new Date().getTime()}-3`,\n      text: \"\",\n      imageUrl: null,\n      objectUrl: defaultImg,\n      file: null,\n    },\n  ]);\n  const [coverPhoto, setCoverPhoto] = useState(null);\n  const [coverPhotoUrl, setCoverPhotoUrl] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showCancelModal, setShowCancelModal] = useState(false);\n  const [showPostModal, setShowPostModal] = useState(false);\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertText, setAlertText] = useState(\"\");\n\n  useEffect(() => {\n    if (coverPhotoUrl) {\n      uploadRecipe();\n    }\n  }, [coverPhotoUrl]);\n\n  const handleInputChange = (e) => {\n    setInputs({ ...inputs, [e.target.name]: e.target.value });\n  };\n\n  const handleSelectChange = (select) => {\n    setInputs({ ...inputs, [select.name]: select.label });\n  };\n\n  const checkInputs = () => {\n    const {\n      title,\n      category,\n      mealTime,\n      summary,\n      portion,\n      cookTime,\n      tips,\n    } = inputs;\n    if (title.trim().length === 0) {\n      setAlertText(\"請輸入食譜名稱\");\n      toggleAlert();\n    } else if (category.trim().length === 0) {\n      setAlertText(\"請選擇食譜分類\");\n      toggleAlert();\n    } else if (mealTime.trim().length === 0) {\n      setAlertText(\"請選擇適合時間\");\n      toggleAlert();\n    } else if (!coverPhoto) {\n      setAlertText(\"請上傳食譜封面照片\");\n      toggleAlert();\n    } else if (summary.trim().length === 0) {\n      setAlertText(\"請輸入食譜描述\");\n      toggleAlert();\n    } else if (portion.trim().length === 0) {\n      setAlertText(\"請選擇份量\");\n      toggleAlert();\n    } else if (cookTime.trim().length === 0) {\n      setAlertText(\"請選擇烹調時間\");\n      toggleAlert();\n    } else if (ingredients.some((i) => i.label.trim().length === 0)) {\n      setAlertText(\"食材請選填完整\");\n      toggleAlert();\n    } else if (ingredients.some((i) => i.qty.trim().length === 0)) {\n      setAlertText(\"請輸入食材克數\");\n      toggleAlert();\n    } else if (ingredients.some((i) => isNaN(i.qty))) {\n      setAlertText(\"食材克數請輸入數字\");\n      toggleAlert();\n    } else if (steps.some((s) => s.text.trim().length === 0)) {\n      setAlertText(\"請輸入步驟說明\");\n      toggleAlert();\n    } else if (tips.trim().length === 0) {\n      setAlertText(\"請輸入食譜小叮嚀\");\n      toggleAlert();\n    } else {\n      setShowPostModal(true);\n    }\n  };\n\n  const updateImagesUrltoState = () => {\n    setIsLoading(true);\n    let promises = [];\n    steps.forEach((step) => {\n      if (step.file) {\n        promises = [\n          ...promises,\n          uploadImageToStorage(\n            `/recipeImages/${new Date().getTime()}-${step.file.name}`,\n            step.file,\n            (downloadURL) => {\n              setSteps((prevSteps) =>\n                prevSteps.map((prevStep) => {\n                  if (prevStep.uid === step.uid) {\n                    return { ...prevStep, imageUrl: downloadURL };\n                  }\n                  return prevStep;\n                })\n              );\n            }\n          ),\n        ];\n      }\n    });\n\n    Promise.all(promises).then((response) => {\n      uploadImageToStorage(\n        `/recipeImages/${new Date().getTime()}-${coverPhoto.name}`,\n        coverPhoto,\n        (downloadURL) => {\n          setCoverPhotoUrl(downloadURL);\n        }\n      );\n    });\n  };\n\n  const uploadRecipe = () => {\n    const { title, category, mealTime, summary, portion, cookTime } = inputs;\n    const newSteps = steps.map((step) => {\n      return {\n        uid: step.uid,\n        imageUrl: step.imageUrl,\n        text: step.text,\n      };\n    });\n    postRecipe({\n      title,\n      category,\n      mealTime,\n      summary,\n      portion,\n      cookTime,\n      steps: newSteps,\n      tips: inputs.tips,\n      image: coverPhotoUrl,\n      ingredients,\n      authorId: user.uid,\n      authorPhotoURL: user.photoURL,\n      authorName: user.displayName,\n    });\n    setIsLoading(false);\n    history.push(`/profile/${user.uid}/myRecipes`);\n  };\n\n  const toggleCanceling = () => {\n    setShowCancelModal(!showCancelModal);\n  };\n\n  const confirmCancel = () => {\n    history.push(`/profile/${user.uid}/myRecipes`);\n  };\n\n  const togglePosting = () => {\n    setShowPostModal(!showPostModal);\n  };\n\n  const confirmPost = () => {\n    updateImagesUrltoState();\n  };\n\n  const toggleAlert = () => {\n    setShowAlert(!showAlert);\n  };\n\n  if (isLoading) {\n    return <Loading />;\n  } else {\n    return (\n      <div>\n        <main className={styles.container}>\n          <div>\n            <div className={styles.text}>\n              食譜名稱<span>（14字以內）</span>\n            </div>\n            <input\n              className={styles.input}\n              name=\"title\"\n              value={inputs.title}\n              onChange={handleInputChange}\n              type=\"text\"\n              placeholder=\"請輸入食譜名稱（必填）\"\n            ></input>\n          </div>\n          <div className={styles.flex}>\n            <div className={styles.recipeType}>\n              <div className={styles.text}>食譜分類</div>\n              <Select\n                options={recipeType}\n                onChange={handleSelectChange}\n                placeholder=\"請選擇\"\n              />\n            </div>\n            <div className={styles.recipeTime}>\n              <div className={styles.text}>適合時間</div>\n              <Select\n                options={recipeTime}\n                onChange={handleSelectChange}\n                placeholder=\"請選擇\"\n              />\n            </div>\n          </div>\n          <UploadCoverPhoto setCoverPhoto={setCoverPhoto} />\n          <div>\n            <div className={styles.text}>簡介</div>\n            <textarea\n              placeholder=\"請輸入食譜描述（必填，最多200字）\"\n              name=\"summary\"\n              value={inputs.summary}\n              onChange={handleInputChange}\n            ></textarea>\n          </div>\n          <div className={styles.flex}>\n            <div className={styles.portion}>\n              <div className={styles.text}>\n                份量<span> (人份)</span>\n              </div>\n              <Select\n                options={portion}\n                onChange={handleSelectChange}\n                placeholder=\"請選擇\"\n              />\n            </div>\n            <div className={styles.cookTime}>\n              <div className={styles.text}>\n                烹調時間<span> (分鐘)</span>\n              </div>\n              <Select\n                options={cookTime}\n                onChange={handleSelectChange}\n                placeholder=\"請選擇\"\n              />\n            </div>\n          </div>\n          <Ingredients\n            ingredients={ingredients}\n            setIngredients={setIngredients}\n          />\n          <Steps steps={steps} setSteps={setSteps} />\n          <div className={styles.tips}>\n            <img src={tipsBulb} alt=\"小叮嚀\" style={{ width: \"30px\" }} />\n            <span className={styles.text}>\n              <mark>小叮嚀</mark>\n            </span>\n            <textarea\n              placeholder=\"請輸入食譜小叮嚀（必填）\"\n              name=\"tips\"\n              value={inputs.tips}\n              onChange={handleInputChange}\n            ></textarea>\n          </div>\n          <div className={styles.flex}>\n            <button className={styles.fullBtn} onClick={checkInputs}>\n              發布食譜\n            </button>\n            <button className={styles.lineBtn} onClick={toggleCanceling}>\n              取消\n            </button>\n          </div>\n        </main>\n        {showCancelModal && (\n          <Modal\n            text={\"確定要捨棄這次的編輯？\"}\n            handleCancel={toggleCanceling}\n            handelConfirm={confirmCancel}\n          />\n        )}\n        {showPostModal && (\n          <Modal\n            text={\"確認要發布此篇食譜？\"}\n            handleCancel={togglePosting}\n            handelConfirm={confirmPost}\n          />\n        )}\n        {showAlert && <Alert text={alertText} handelConfirm={toggleAlert} />}\n      </div>\n    );\n  }\n};\nexport default WriteRecipe;\n",["133","134"],"/Users/rosechen/EatHealth/eat-health/src/Components/Footer/Footer.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Ingredients/Ingredients.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Home/Home.js",[],["135","136"],"/Users/rosechen/EatHealth/eat-health/src/Components/SignUp/SignUp.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/LogIn/LogIn.js",[],"/Users/rosechen/EatHealth/eat-health/src/PrivateRoute.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/RecipeList/RecipeList.js",["137"],"import { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\n\nimport { getFavorites, getRecipe, getAllRecipes } from \"../../utils/firebase\";\nimport styles from \"./RecipeList.module.scss\";\nimport image from \"../../images/noRecipe.png\";\n\nimport RecipeListItem from \"../RecipeListItem/RecipeListItem\";\n\nconst RecipeList = ({ subProfile }) => {\n  const [recipeList, setRecipeList] = useState([]);\n  const [gotData, setGotData] = useState(false);\n\n  let { userId } = useParams();\n\n  let urlParams = new URLSearchParams(window.location.search);\n  let category = urlParams.get(\"category\");\n  let mealTime = urlParams.get(\"mealTime\");\n\n  useEffect(() => {\n    setGotData(false);\n    setRecipeList([]);\n\n    if (subProfile === \"favorites\") {\n      getFavorites(userId).then((favorites) => {\n        const getFavoritesData = [];\n        favorites.forEach((favorite) => {\n          getFavoritesData.push(getRecipe(favorite.id));\n        });\n        Promise.all(getFavoritesData).then((favoriteDocs) => {\n          setRecipeList(\n            favoriteDocs.map((favoriteDoc) => {\n              return { ...favoriteDoc.data(), liked: 0, commments: 0 };\n            })\n          );\n          setGotData(true);\n        });\n      });\n    } else {\n      getAllRecipes().then((recipesDocs) => {\n        setRecipeList(\n          recipesDocs.docs.map((recipeDoc) => {\n            return { ...recipeDoc.data(), like: 0, commments: 0 };\n          })\n        );\n        setGotData(true);\n      });\n    }\n  }, [subProfile]);\n\n  let filteredRecipeList = recipeList\n    .filter((recipe) => {\n      switch (category) {\n        case \"balanced\":\n          return recipe.category === \"均衡料理\";\n        case \"lowcarbs\":\n          return recipe.category === \"減醣料理\";\n        case \"highpt\":\n          return recipe.category === \"增肌料理\";\n        default:\n          return true;\n      }\n    })\n    .filter((recipe) => {\n      switch (mealTime) {\n        case \"breakfast\":\n          return recipe.mealTime === \"早餐\";\n        case \"lunchDinner\":\n          return recipe.mealTime === \"午晚餐\";\n        case \"dessert\":\n          return recipe.mealTime === \"點心\";\n        default:\n          return true;\n      }\n    })\n    .filter((recipe) => {\n      if (subProfile === \"myRecipes\") {\n        return recipe.authorId === userId;\n      }\n      return true;\n    });\n\n  if (gotData) {\n    return (\n      <div className={styles.recipeList}>\n        {filteredRecipeList.length > 0 ? (\n          filteredRecipeList.map((recipe) => {\n            return <RecipeListItem recipe={recipe} key={recipe.id} />;\n          })\n        ) : (\n          <div className={styles.noRecipeList}>\n            <div className={styles.noRecipeImage}>\n              <img src={image} alt=\"\"></img>\n            </div>\n            <div className={styles.text}>\n              <div className={styles.title}>目前還沒有食譜哦！</div>\n              <div className={styles.description}>\n                分享自己的料理，\n                <br />\n                一起加入健康食分吧！\n              </div>\n              <Link to=\"/writeRecipe\">\n                <button className={styles.fullBtn}>開始寫食譜</button>\n              </Link>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  } else {\n    return <div></div>;\n  }\n};\n\nexport default RecipeList;\n","/Users/rosechen/EatHealth/eat-health/src/Components/Recipe/Recipe.js",["138"],"/Users/rosechen/EatHealth/eat-health/src/Components/Chart/Chart.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Profile/Profile.js",["139"],"/Users/rosechen/EatHealth/eat-health/src/Components/Recipes/Recipes.js",["140"],"import { useEffect, useState } from \"react\";\nimport { NavLink, Switch } from \"react-router-dom\";\n\nimport styles from \"./Recipes.module.scss\";\n\nimport RecipeList from \"../RecipeList/RecipeList\";\nimport CategoryBox from \"../CategoryBox/CategoryBox\";\n\nconst Recipes = () => {\n  const [categoryName, setCategoryName] = useState(\"全部料理\");\n  const [categoryEnglish, setCategoryEnglish] = useState(\"ALL RECIPES\");\n  let urlParams = new URLSearchParams(window.location.search);\n  let category = urlParams.get(\"category\");\n  let mealTime = urlParams.get(\"mealTime\");\n\n  useEffect(() => {\n    switch (category) {\n      case \"all\":\n        setCategoryName(\"全部料理\");\n        setCategoryEnglish(\"ALL RECIPES\");\n        break;\n      case \"balanced\":\n        setCategoryName(\"均衡料理\");\n        setCategoryEnglish(\"BALANCED\");\n        break;\n      case \"lowcarbs\":\n        setCategoryName(\"減醣料理\");\n        setCategoryEnglish(\"LOW CARBS\");\n        break;\n      case \"highpt\":\n        setCategoryName(\"增肌料理\");\n        setCategoryEnglish(\"HIGH PROTEINS\");\n        break;\n      default:\n        setCategoryName(\"全部料理\");\n    }\n  }, [category]);\n\n  const checkActive = (query) => {\n    return mealTime === query;\n  };\n\n  return (\n    <div className={styles.recipesContainer}>\n      <div className={styles.banner}>\n        <div>{categoryName}</div>\n        <div className={styles.categoryEnglish}>{categoryEnglish}</div>\n      </div>\n      <div className={styles.container}>\n        <div className={styles.main}>\n          <div className={styles.recipes}>\n            <div className={styles.mealTime}>\n              <NavLink\n                exact\n                to={`/recipes?category=${category}`}\n                activeClassName={styles.mealTimeActive}\n                isActive={() => checkActive(null)}\n              >\n                全部\n              </NavLink>\n              <NavLink\n                exact\n                to={`/recipes?category=${category}&mealTime=breakfast`}\n                activeClassName={styles.mealTimeActive}\n                isActive={() => checkActive(\"breakfast\")}\n              >\n                早餐\n              </NavLink>\n              <NavLink\n                exact\n                to={`/recipes?category=${category}&mealTime=lunchDinner`}\n                activeClassName={styles.mealTimeActive}\n                isActive={() => checkActive(\"lunchDinner\")}\n              >\n                午 / 晚餐\n              </NavLink>\n              <NavLink\n                exact\n                to={`/recipes?category=${category}&mealTime=dessert`}\n                activeClassName={styles.mealTimeActive}\n                isActive={() => checkActive(\"dessert\")}\n              >\n                點心 / 下午茶\n              </NavLink>\n            </div>\n            <RecipeList />\n          </div>\n          <div className={styles.categoryBox}>\n            <CategoryBox />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Recipes;\n","/Users/rosechen/EatHealth/eat-health/src/Components/Comments/Comments.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/RecipeListItem/RecipeListItem.js",["141"],"import { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart, faCommentAlt } from \"@fortawesome/free-regular-svg-icons\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  getRecipeLikes,\n  getRecipeComments,\n  updateRecipe,\n} from \"../../utils/firebase\";\nimport styles from \"./RecipeListItem.module.scss\";\n\nconst RecipeListItem = ({ recipe }) => {\n  const [recipeData, setRecipeData] = useState(recipe);\n\n  useEffect(() => {\n    const getLikesAndComments = [\n      getRecipeLikes(recipe.id),\n      getRecipeComments(recipe.id),\n    ];\n    Promise.all(getLikesAndComments).then((result) => {\n      const likesAndComments = {\n        liked: result[0].size,\n        comments: result[1].size,\n      };\n      updateRecipe(recipe.id, likesAndComments);\n      setRecipeData({ ...recipeData, ...likesAndComments });\n    });\n  }, []);\n\n  return (\n    <Link to={`/recipes/${recipeData.id}`}>\n      <div className={styles.recipe}>\n        <div className={styles.image}>\n          <img src={recipeData.image} alt=\"食譜照片\"></img>\n        </div>\n        <div className={styles.content}>\n          <div className={styles.title}>{recipeData.title}</div>\n          <div className={styles.author}>By {recipeData.authorName}</div>\n          <div>\n            <small>{recipeData.category}</small>{\" \"}\n            <small>{recipeData.mealTime}</small>\n          </div>\n          <div className={styles.likeComment}>\n            <div>\n              <FontAwesomeIcon icon={faHeart} style={{ color: \"#8a949f\" }} />\n              <span className={styles.text}>{recipeData.liked} 個讚</span>\n            </div>\n            <div>\n              <FontAwesomeIcon\n                icon={faCommentAlt}\n                style={{ color: \"#8a949f\" }}\n              />\n              <span className={styles.text}>{recipeData.comments} 則留言</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default RecipeListItem;\n","/Users/rosechen/EatHealth/eat-health/src/Components/SubProfile/SubProfile.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/FollowList/FollowList.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Steps/Steps.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/CategoryBox/CategoryBox.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/RecommendedBox/RecommendedBox.js",[],["142","143"],"/Users/rosechen/EatHealth/eat-health/src/Components/Loading/Loading.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Modal/Modal.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Alert/Alert.js",[],"/Users/rosechen/EatHealth/eat-health/src/utils/firebase.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/UploadCoverPhoto/UploadCoverPhoto.js",[],"/Users/rosechen/EatHealth/eat-health/src/utils/firebaseConfig.js",[],{"ruleId":"144","severity":1,"message":"145","line":2,"column":27,"nodeType":"146","messageId":"147","endLine":2,"endColumn":33},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"148","replacedBy":"152"},{"ruleId":"150","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":127,"column":6,"nodeType":"156","endLine":127,"endColumn":21,"suggestions":"157"},{"ruleId":"148","replacedBy":"158"},{"ruleId":"150","replacedBy":"159"},{"ruleId":"148","replacedBy":"160"},{"ruleId":"150","replacedBy":"161"},{"ruleId":"154","severity":1,"message":"162","line":49,"column":6,"nodeType":"156","endLine":49,"endColumn":18,"suggestions":"163"},{"ruleId":"154","severity":1,"message":"164","line":168,"column":6,"nodeType":"156","endLine":168,"endColumn":33,"suggestions":"165"},{"ruleId":"154","severity":1,"message":"166","line":88,"column":6,"nodeType":"156","endLine":88,"endColumn":14,"suggestions":"167"},{"ruleId":"144","severity":1,"message":"168","line":2,"column":19,"nodeType":"146","messageId":"147","endLine":2,"endColumn":25},{"ruleId":"154","severity":1,"message":"169","line":29,"column":6,"nodeType":"156","endLine":29,"endColumn":8,"suggestions":"170"},{"ruleId":"148","replacedBy":"171"},{"ruleId":"150","replacedBy":"172"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["173"],"no-negated-in-lhs",["174"],["173"],["174"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'uploadRecipe'. Either include it or remove the dependency array.","ArrayExpression",["175"],["173"],["174"],["173"],["174"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["176"],"React Hook useEffect has missing dependencies: 'countNutritionalFacts', 'history', and 'user'. Either include them or remove the dependency array.",["177"],"React Hook useEffect has missing dependencies: 'history' and 'user.uid'. Either include them or remove the dependency array.",["178"],"'Switch' is defined but never used.","React Hook useEffect has missing dependencies: 'recipe.id' and 'recipeData'. Either include them or remove the dependency array. You can also do a functional update 'setRecipeData(r => ...)' if you only need 'recipeData' in the 'setRecipeData' call.",["179"],["173"],["174"],"no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},"Update the dependencies array to be: [coverPhotoUrl, uploadRecipe]",{"range":"190","text":"191"},"Update the dependencies array to be: [subProfile, userId]",{"range":"192","text":"193"},"Update the dependencies array to be: [countNutritionalFacts, history, recipe.authorId, recipeId, user]",{"range":"194","text":"195"},"Update the dependencies array to be: [history, user.uid, userId]",{"range":"196","text":"197"},"Update the dependencies array to be: [recipe.id, recipeData]",{"range":"198","text":"199"},[3554,3569],"[coverPhotoUrl, uploadRecipe]",[1520,1532],"[subProfile, userId]",[5155,5182],"[countNutritionalFacts, history, recipe.authorId, recipeId, user]",[2199,2207],"[history, user.uid, userId]",[891,893],"[recipe.id, recipeData]"]
[{"/Users/rosechen/EatHealth/eat-health/src/App.js":"1","/Users/rosechen/EatHealth/eat-health/src/index.js":"2","/Users/rosechen/EatHealth/eat-health/src/reportWebVitals.js":"3","/Users/rosechen/EatHealth/eat-health/src/firebase.js":"4","/Users/rosechen/EatHealth/eat-health/src/Components/Header/Header.js":"5","/Users/rosechen/EatHealth/eat-health/src/Components/UploadImage/UploadImage.js":"6","/Users/rosechen/EatHealth/eat-health/src/Components/WriteRecipe/WriteRecipe.js":"7","/Users/rosechen/EatHealth/eat-health/src/Components/Footer/Footer.js":"8","/Users/rosechen/EatHealth/eat-health/src/Components/Ingredients/Ingredients.js":"9","/Users/rosechen/EatHealth/eat-health/src/Components/Home/Home.js":"10","/Users/rosechen/EatHealth/eat-health/src/Components/SignUp/SignUp.js":"11","/Users/rosechen/EatHealth/eat-health/src/Components/LogIn/LogIn.js":"12","/Users/rosechen/EatHealth/eat-health/src/PrivateRoute.js":"13","/Users/rosechen/EatHealth/eat-health/src/Components/RecipeList/RecipeList.js":"14","/Users/rosechen/EatHealth/eat-health/src/Components/Recipe/Recipe.js":"15","/Users/rosechen/EatHealth/eat-health/src/Components/Chart/Chart.js":"16","/Users/rosechen/EatHealth/eat-health/src/Components/Profile/Profile.js":"17","/Users/rosechen/EatHealth/eat-health/src/Components/Recipes/Recipes.js":"18","/Users/rosechen/EatHealth/eat-health/src/Components/Comments/Comments.js":"19","/Users/rosechen/EatHealth/eat-health/src/Components/RecipeListItem/RecipeListItem.js":"20","/Users/rosechen/EatHealth/eat-health/src/Components/SubProfile/SubProfile.js":"21","/Users/rosechen/EatHealth/eat-health/src/Components/FollowList/FollowList.js":"22","/Users/rosechen/EatHealth/eat-health/src/Components/Steps/Steps.js":"23","/Users/rosechen/EatHealth/eat-health/src/Components/CategoryBox/CategoryBox.js":"24","/Users/rosechen/EatHealth/eat-health/src/Components/RecommendedBox/RecommendedBox.js":"25","/Users/rosechen/EatHealth/eat-health/src/Components/Loading/Loading.js":"26","/Users/rosechen/EatHealth/eat-health/src/Components/Modal/Modal.js":"27","/Users/rosechen/EatHealth/eat-health/src/Components/Alert/Alert.js":"28"},{"size":2462,"mtime":1608889995998,"results":"29","hashOfConfig":"30"},{"size":587,"mtime":1607916544722,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1606282798157,"results":"32","hashOfConfig":"30"},{"size":886,"mtime":1606795149099,"results":"33","hashOfConfig":"30"},{"size":5360,"mtime":1608982125414,"results":"34","hashOfConfig":"30"},{"size":1158,"mtime":1608798141503,"results":"35","hashOfConfig":"30"},{"size":10808,"mtime":1608982457618,"results":"36","hashOfConfig":"30"},{"size":327,"mtime":1608890394716,"results":"37","hashOfConfig":"30"},{"size":3702,"mtime":1608797906820,"results":"38","hashOfConfig":"30"},{"size":14623,"mtime":1609062550792,"results":"39","hashOfConfig":"30"},{"size":4395,"mtime":1608877833410,"results":"40","hashOfConfig":"30"},{"size":3751,"mtime":1608878153976,"results":"41","hashOfConfig":"30"},{"size":396,"mtime":1607912254077,"results":"42","hashOfConfig":"30"},{"size":5590,"mtime":1609065233471,"results":"43","hashOfConfig":"30"},{"size":18771,"mtime":1609057392537,"results":"44","hashOfConfig":"30"},{"size":717,"mtime":1607934579213,"results":"45","hashOfConfig":"30"},{"size":5689,"mtime":1609065989981,"results":"46","hashOfConfig":"30"},{"size":2907,"mtime":1608955957398,"results":"47","hashOfConfig":"30"},{"size":6691,"mtime":1608778025358,"results":"48","hashOfConfig":"30"},{"size":2484,"mtime":1608885403155,"results":"49","hashOfConfig":"30"},{"size":709,"mtime":1609065522287,"results":"50","hashOfConfig":"30"},{"size":6916,"mtime":1609066216316,"results":"51","hashOfConfig":"30"},{"size":4140,"mtime":1608797767640,"results":"52","hashOfConfig":"30"},{"size":1372,"mtime":1608970952222,"results":"53","hashOfConfig":"30"},{"size":2056,"mtime":1608553906389,"results":"54","hashOfConfig":"30"},{"size":298,"mtime":1608708963921,"results":"55","hashOfConfig":"30"},{"size":590,"mtime":1608774237340,"results":"56","hashOfConfig":"30"},{"size":486,"mtime":1608794218937,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17pns1l",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"71"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"106"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},"/Users/rosechen/EatHealth/eat-health/src/App.js",["129"],"/Users/rosechen/EatHealth/eat-health/src/index.js",[],["130","131"],"/Users/rosechen/EatHealth/eat-health/src/reportWebVitals.js",[],["132","133"],"/Users/rosechen/EatHealth/eat-health/src/firebase.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Header/Header.js",["134","135","136","137","138"],"import { BrowserRouter as Router, Switch, Route, Link, useHistory, NavLink } from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faChevronDown, faChevronUp } from '@fortawesome/free-solid-svg-icons'\n\n\nimport styles from './Header.module.scss';\nimport { auth } from '../../firebase';\nimport logo from \"../../images/logo-full.png\";\n\n\n\nconst Header = ({ user }) => { \n    const [isExploring, setIsExploring] = useState(false);   \n    let history = useHistory();\n\n    const div = useRef();\n\n    const logout = () => {\n        auth.signOut().then(function() {\n            history.push(\"/\");\n          }).catch(function(error) {\n            alert(\"登出失敗\");\n          });\n    }\n\n    const isActiveLink = (params) => {\n        let urlParams = new URLSearchParams(window.location.search);\n        let category = urlParams.get(\"category\");\n        return category === params;\n    }\n\n    const toggleIsExploring = () => {\n        isExploring ? div.current.style.top = \"-10px\" : div.current.style.top = \"65px\"\n        setIsExploring(!isExploring);\n    }\n\n    return (\n        <header className={styles.header}>\n            <div className={styles.top}>\n                <div className={styles.left}>\n                    <div className={styles.logo}>\n                        <Link to=\"/\"><img src={logo} alt=\"\"></img></Link>\n                    </div>\n                    { \n                        isExploring \n                        ? <div className={styles.explore} onMouseOver={toggleIsExploring} onMouseOut={toggleIsExploring}  style={{color: \"#85bf3e\"}}>找食譜 &nbsp;<FontAwesomeIcon icon={faChevronDown}></FontAwesomeIcon></div>\n\n                        : <div className={styles.explore} onMouseOver={toggleIsExploring} onMouseOut={toggleIsExploring}>找食譜 &nbsp;<FontAwesomeIcon icon={faChevronUp}></FontAwesomeIcon></div>\n\n                    }\n                </div>\n                <div className={styles.right}>\n                    {/* <form className={styles.search}>\n                        <FontAwesomeIcon icon={faSearch} style={{color:\"#8a949f\"}}/>\n                        <input type=\"search\" placeholder=\"今天想煮什麼？\"></input>\n                    </form> */}\n                    \n                    <Link to=\"/writeRecipe\">\n                        <button className={styles.fullBtn}>+ 寫食譜</button>\n                    </Link>\n                    {\n                        user ?\n                            <div style={{display: \"flex\"}}>\n                                <div className={styles.profile}>\n                                    {/* <img src={defaultAvatar} alt=\"會員\"></img> */}\n                                    <img src={user.photoURL} alt=\"會員\"></img>\n                                    <div>{user.displayName}</div>\n                                    <div className={styles.dropdown}>\n                                        <Link to={`/profile/${user.uid}/myRecipes`}>\n                                            <div className={styles.dropdownLink}>個人頁面</div>\n                                        </Link>\n                                        <Link to={`/profile/${user.uid}/favorites`}>\n                                            <div className={styles.dropdownLink}>食譜收藏</div>\n                                        </Link>\n                                        <div className={styles.dropdownLink} onClick={logout}>登出</div>\n                                    </div>\n                                </div>\n                            </div>\n                        : \n                        <div className={styles.member}>\n                            <Link to=\"/signup\">\n                                <button className={styles.lineBtn}>註冊</button>\n                            </Link>\n                            <Link to=\"/login\">\n                                <div className={styles.log}>登入</div>\n                            </Link>\n                        </div>\n                    }\n                </div>\n            </div>\n            <div className={styles.bottom} ref={div}  onMouseOver={toggleIsExploring} onMouseOut={toggleIsExploring}>\n                <div className={styles.menu}>\n                    <div className={styles.link}>\n                        <NavLink to=\"/recipes?category=all\" activeClassName={styles.activeMenu} isActive={() => isActiveLink(\"all\")}>全部料理</NavLink>\n                    </div>\n                    <div className={styles.link}>\n                        <NavLink to=\"/recipes?category=balanced\" activeClassName={styles.activeMenu} isActive={() => isActiveLink(\"balanced\")}>均衡料理</NavLink>\n                    </div>\n                    <div className={styles.link}>\n                        <NavLink to=\"/recipes?category=lowcarbs\" activeClassName={styles.activeMenu} isActive={() => isActiveLink(\"lowcarbs\")}>減醣料理</NavLink>\n                    </div>\n                    <div className={styles.link}>\n                        <NavLink to=\"/recipes?category=highpt\" activeClassName={styles.activeMenu} isActive={() => isActiveLink(\"highpt\")}>增肌料理</NavLink>\n                    </div>\n                </div>\n            </div>\n        </header>\n    )\n}\n\nexport default Header;",["139","140"],"/Users/rosechen/EatHealth/eat-health/src/Components/UploadImage/UploadImage.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/WriteRecipe/WriteRecipe.js",["141","142"],"import { useEffect, useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport { db, storage } from \"../../firebase\";\nimport Select from \"react-select\";\nimport { useHistory } from \"react-router-dom\";\n\nimport UploadImage from \"../UploadImage/UploadImage\";\nimport Ingredients from \"../Ingredients/Ingredients\";\nimport Steps from \"../Steps/Steps\";\nimport Loading from \"../Loading/Loading\";\nimport Modal from \"../Modal/Modal\";\nimport Alert from \"../Alert/Alert\";\nimport styles from \"./WriteRecipe.module.scss\";\nimport foodDatabase from \"../../foodDatabase.json\";\nimport tipsBulb from \"../../images/tips-bulb.svg\";\nimport defaultImg from \"../../images/upload.png\"\n\n\n\n// react-select options\n// const options = foodDatabase.foods.map(food => ({ value: food.id, label: food.name, ...food }));\nconst recipeType = [{ value: 0, label: \"均衡料理\", name:\"category\"}, { value: 1, label: \"減醣料理\", name:\"category\"}, { value: 2, label: \"增肌料理\", name:\"category\"}];\nconst recipeTime = [{ value: 0, label: \"早餐\", name:\"mealTime\"}, { value: 1, label: \"午晚餐\", name:\"mealTime\"}, { value: 2, label: \"點心\", name:\"mealTime\"}];\nconst portion = [{ value: 0, label: \"1\", name: \"portion\"}, { value: 1, label: \"2\", name: \"portion\"}, { value: 2, label: \"3\", name: \"portion\"}, { value: 3, label: \"4\", name: \"portion\"}, { value: 4, label: \"5\", name: \"portion\"}, { value: 5, label: \"6\", name: \"portion\"}, { value: 6, label: \"7\", name: \"portion\"}, { value: 7, label: \"8\", name: \"portion\"}, { value: 8, label: \"9\", name: \"portion\"}, { value: 9, label: \"10+\", name: \"portion\"}];\nconst cookTime = [{ value: 0, label: \"5\", name: \"cookTime\"}, { value: 1, label: \"10\", name: \"cookTime\"}, { value: 2, label: \"15\", name: \"cookTime\"}, { value: 3, label: \"20\", name: \"cookTime\"}, { value: 4, label: \"30\", name: \"cookTime\"}, { value: 5, label: \"45\", name: \"cookTime\"}, { value: 6, label: \"60\", name: \"cookTime\"}, { value: 7, label: \"90\", name: \"cookTime\"}, { value: 8, label: \"120+\", name: \"cookTime\"}];\n\n\nconst WriteRecipe = ({user}) => {\n  let history = useHistory();\n\n  const [ inputs, setInputs ] = useState({ title: \"\", category: \"\", mealTime: \"\", summary: \"\", portion: \"\",cookTime: \"\", tips: \"\"});\n  const [ ingredients, setIngredients ] = useState([{uid: `${new Date().getTime()}-1`, value:\"\", label:\"\", id:\"\",type:\"\", name:\"\",calorie:0, carb:0, protein:0, fat:0, qty:\"\"}, {uid: `${new Date().getTime()}-2`, value:\"\", label:\"\", id:\"\",type:\"\", name:\"\",calorie:0, carb:0, protein:0, fat:0, qty:\"\"}]);\n  const [ steps, setSteps ] = useState([{uid: `${new Date().getTime()}-1`, text:\"\", imageUrl: null, objectUrl: defaultImg, file: null}, {uid: `${new Date().getTime()}-2`, text:\"\", imageUrl: null, objectUrl: defaultImg, file: null}, {uid: `${new Date().getTime()}-3`, text:\"\", imageUrl: null, objectUrl: defaultImg, file: null},])\n  const [ file, setFile ] = useState(null); // 上傳到storage的主圖\n  const [ url, setUrl ] = useState(null); // 從storage取得的url\n  const [ isLoading, setIsLoading ] = useState(false);\n  const [ showCancelModal, setShowCancelModal ] = useState(false); // 確認取消modal\n  const [ showPostModal, setShowPostModal ] = useState(false); // 確認發布modal\n  const [ showAlert, setShowAlert ] = useState(false); // 警告視窗\n  const [ alertText, setAlertText ] = useState(\"\"); // 警告視窗文字\n\n  useEffect(() => {\n    if(url) {\n      postRecipe();\n    }\n  }, [url]);\n\n  const handleInputChange = (e) => {\n    setInputs({...inputs, [e.target.name]: e.target.value});\n  }\n\n  const handleSelectChange = (select) => {\n    setInputs({...inputs, [select.name]: select.label});\n  }\n\n  const checkInput = () => {\n    let { title, category, mealTime, summary, portion, cookTime, tips } = inputs;\n    if(title.trim().length === 0) {\n      setAlertText(\"請輸入食譜名稱\");\n      toggleAlert();\n    } else if(category.trim().length === 0) {\n      setAlertText(\"請選擇食譜分類\");\n      toggleAlert();\n    } else if(mealTime.trim().length === 0) {\n      setAlertText(\"請選擇適合時間\");\n      toggleAlert();\n    } else if(!file) {\n      setAlertText(\"請上傳食譜封面照片\");\n      toggleAlert();\n    }else if(summary.trim().length === 0) {\n      setAlertText(\"請輸入食譜描述\");\n      toggleAlert();\n    } else if(portion.trim().length === 0) {\n      setAlertText(\"請選擇份量\");\n      toggleAlert();\n    } else if(cookTime.trim().length === 0) {\n      setAlertText(\"請選擇烹調時間\");\n      toggleAlert();\n    } else if(ingredients.some(i => i.label.trim().length === 0)) {\n      setAlertText(\"食材請選填完整\");\n      toggleAlert();\n    } else if(ingredients.some(i => i.qty.trim().length === 0)) {\n      setAlertText(\"請輸入食材克數\");\n      toggleAlert();\n    } else if(ingredients.some(i => isNaN(i.qty))) {\n      setAlertText(\"食材克數請輸入數字\");\n      toggleAlert();\n    } else if(steps.some(s => s.text.trim().length === 0)) {\n      setAlertText(\"請輸入步驟說明\");\n      toggleAlert();\n    } else if(tips.trim().length === 0) {\n      setAlertText(\"請輸入食譜小叮嚀\");\n      toggleAlert();\n    } else {\n      setShowPostModal(true);\n    }\n  }\n\n  const uploadImage = () => {\n    setIsLoading(true);\n    let promises = [];\n    // 上傳每步驟的照片到storage > 得到url > setSteps\n    steps.forEach(step => {\n      if(step.file) {\n        promises = [\n          ...promises,\n          storage.ref(`/recipeImages/${new Date().getTime()}-${step.file.name}`).put(step.file)\n          .then(snapshot => snapshot.ref.getDownloadURL())\n          .then(downloadURL => { \n            setSteps( prevSteps => prevSteps.map(prevStep => {\n              if(prevStep.uid === step.uid) {\n                return ({ ...prevStep, imageUrl: downloadURL })\n              }\n              return prevStep;\n            }))\n          })\n        ]\n      } \n    })\n    // 上傳主圖到storage > 得到url > setUrl > useEffect觸發postRecipe\n    Promise.all(promises).then(response => {\n      storage.ref(`/recipeImages/${new Date().getTime()}-${file.name}`).put(file)\n      .then(snapshot => snapshot.ref.getDownloadURL())\n      .then(downloadURL => { setUrl(downloadURL); });\n    })\n  };\n\n  const postRecipe = () => {\n    let newSteps = steps.map(step => {\n      return ({ \n        uid: step.uid,\n        imageUrl: step.imageUrl,\n        text: step.text\n      })\n    })\n    // 上傳最新的state到firestore\n    let recipe = db.collection('recipes').doc();\n      recipe.set({\n        title: inputs.title,\n        category: inputs.category,\n        mealTime: inputs.mealTime,\n        summary: inputs.summary,\n        portion: inputs.portion,\n        cookTime: inputs.cookTime,\n        steps: newSteps,\n        tips: inputs.tips,\n        id: recipe.id,\n        image: url,\n        ingredients,\n        createdTime: firebase.firestore.FieldValue.serverTimestamp(),\n        authorId: user.uid,\n        authorPhotoURL: user.photoURL,\n        authorName: user.displayName,\n    })\n    setIsLoading(false);\n    history.push(`/profile/${user.uid}/myRecipes`);\n  }\n\n  // 開啟/關閉取消modal\n  const toggleCanceling = () => {\n    setShowCancelModal(!showCancelModal);\n  }\n  // 取消modal點擊確認\n  const confirmCancel = () => {\n    history.push(`/profile/${user.uid}/myRecipes`);\n  }\n  // 開啟/關閉發布modal\n  const togglePosting = () => {\n    setShowPostModal(!showPostModal);\n  }\n  // 發布modal點擊確認\n  const confirmPost = () => {\n    uploadImage();\n  }\n  // alert點擊確認\n  const toggleAlert = () => {\n    setShowAlert(!showAlert);\n  }\n  \n  if(isLoading) {\n    return (\n      <Loading />\n    )\n  } else {\n    return (\n      <div>\n        <main className={styles.container}>\n          <div>\n            <div className={styles.text}>食譜名稱<span>（14字以內）</span></div>\n            <input className={styles.input} name=\"title\" value={inputs.title} onChange={handleInputChange} type=\"text\" placeholder=\"請輸入食譜名稱（必填）\"></input>\n          </div>\n          <div className={styles.flex}>\n            <div className={styles.recipeType}>\n              <div className={styles.text}>食譜分類</div>\n              <Select options={recipeType} onChange={handleSelectChange} placeholder=\"請選擇...（必填）\"/>\n            </div>\n            <div className={styles.recipeTime}>\n              <div className={styles.text}>適合時間</div>\n              <Select options={recipeTime} onChange={handleSelectChange} placeholder=\"請選擇...（必填）\"/>\n            </div>\n          </div>\n          <UploadImage \n            file={file} \n            setFile={setFile}      \n          />\n          <div>\n            <div className={styles.text}>簡介</div>\n            <textarea placeholder=\"請輸入食譜描述（必填，最多200字）\" name=\"summary\" value={inputs.summary} onChange={handleInputChange}></textarea>\n          </div>\n          <div className={styles.flex}>\n            <div className={styles.portion}>\n              <div className={styles.text}>份量<span>（人份）</span></div>\n              <Select options={portion} onChange={handleSelectChange} placeholder=\"請選擇...（必填）\"/>\n            </div>\n            <div className={styles.cookTime}>\n              <div className={styles.text}>烹調時間<span>（分鐘）</span></div>\n              <Select options={cookTime} onChange={handleSelectChange} placeholder=\"請選擇...（必填）\"/>\n            </div>\n          </div>\n          <Ingredients \n            // options={options} \n            ingredients={ingredients}\n            setIngredients={setIngredients}\n          />\n          <Steps \n            steps={steps}\n            setSteps={setSteps}\n          />\n          <div className={styles.tips}>\n            <img src={tipsBulb} alt=\"小叮嚀\" style={{width: \"30px\"}}/>\n            <span className={styles.text}><mark>小叮嚀</mark></span>\n            <textarea placeholder=\"請輸入食譜小叮嚀（必填）\" name=\"tips\" value={inputs.tips} onChange={handleInputChange}></textarea>\n          </div>\n          <div className={styles.flex}>\n            <button className={styles.fullBtn} onClick={checkInput}>發布食譜</button>\n            <button className={styles.lineBtn} onClick={toggleCanceling}>取消</button>\n          </div>\n        </main>\n        {\n          showCancelModal &&\n          <Modal text={\"確定要捨棄這次的編輯？\"} handleCancel={toggleCanceling} handelConfirm={confirmCancel}/>\n        }\n        {\n          showPostModal &&\n          <Modal text={\"確認要發布此篇食譜？\"} handleCancel={togglePosting} handelConfirm={confirmPost}/>\n        }\n        {\n          showAlert &&\n          <Alert text={alertText} handelConfirm={toggleAlert}/>\n        }\n      </div>\n    );\n  }\n}\nexport default WriteRecipe;","/Users/rosechen/EatHealth/eat-health/src/Components/Footer/Footer.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Ingredients/Ingredients.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Home/Home.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/SignUp/SignUp.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/LogIn/LogIn.js",[],["143","144"],"/Users/rosechen/EatHealth/eat-health/src/PrivateRoute.js",[],["145","146"],"/Users/rosechen/EatHealth/eat-health/src/Components/RecipeList/RecipeList.js",["147","148","149","150","151","152","153"],"import { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory, useRouteMatch, useParams, NavLink } from \"react-router-dom\";\n\nimport RecipeListItem from \"../RecipeListItem/RecipeListItem\"\nimport styles from \"./RecipeList.module.scss\";\nimport { db } from \"../../firebase\";\nimport image from \"../../images/noRecipe.png\";\n\nconst RecipeList = ({ subProfile }) => {\n    const [ recipeList, setRecipeList ] = useState([]);\n    const [ gotData, setGotData ] = useState(false); //\n\n\n    // 個人頁面-收藏食譜\n    let { userId } = useParams();\n\n    // 食譜列表-篩選食譜\n    let urlParams = new URLSearchParams(window.location.search);\n    let category = urlParams.get(\"category\");\n    let mealTime = urlParams.get(\"mealTime\");\n    \n    useEffect(() => {\n        setGotData(false);\n        setRecipeList([]);\n\n        if(subProfile === \"favorites\") {\n            db.collection(\"users\").doc(userId).collection(\"favorites\").get().then(docs => {\n                let favorites = [];\n                let promises = [];\n                docs.forEach(doc => {\n                    promises = [\n                        ...promises,\n                        db.collection(\"recipes\").doc(doc.id).get().then(doc => {\n                            const recipe = doc.data();\n                            favorites = [...favorites, {\n                                id: recipe.id,\n                                image: recipe.image,\n                                title: recipe.title,\n                                authorName: recipe.authorName,\n                                authorId: recipe.authorId,\n                                authorPhotoURL: recipe.authorPhotoURL,\n                                category: recipe.category,\n                                mealTime: recipe.mealTime,\n                                liked: 0,\n                                commments: 0,\n                            }];\n                            setRecipeList(favorites);\n                        })\n                    ]\n                })\n                Promise.all(promises).then(response => {\n                    setGotData(true);\n                })\n            })\n        } else {\n            db.collection(\"recipes\").get().then(docs => {\n                let newRecipeList = [];\n                docs.forEach(doc => {\n                    const recipe = doc.data(); \n                    newRecipeList = [...newRecipeList,{\n                        id: recipe.id,\n                        image: recipe.image,\n                        title: recipe.title,\n                        authorName: recipe.authorName,\n                        authorId: recipe.authorId,\n                        authorPhotoURL: recipe.authorPhotoURL,\n                        category: recipe.category,\n                        mealTime: recipe.mealTime,\n                        liked: 0,\n                        commments: 0,\n                    }]\n                })\n                setRecipeList(newRecipeList);\n                setGotData(true);\n            })\n        }\n    }, [subProfile]);\n\n    let filteredRecipeList = recipeList\n        .filter(recipe => {\n            switch (category) {\n                case \"balanced\" :\n                    return recipe.category === \"均衡料理\";\n                case \"lowcarbs\" :\n                    return recipe.category === \"減醣料理\";\n                case \"highpt\" :\n                    return recipe.category === \"增肌料理\";\n                default:\n                    return true;\n            }\n        })\n        .filter(recipe => {\n            switch (mealTime) {\n                case \"breakfast\" :\n                    return recipe.mealTime === \"早餐\";\n                case \"lunchDinner\" :\n                    return recipe.mealTime === \"午晚餐\";\n                case \"dessert\" :\n                    return recipe.mealTime === \"點心\";\n                default:\n                    return true;\n            }\n        })\n        .filter(recipe => {\n            if(subProfile === \"myRecipes\") {\n                return recipe.authorId === userId;\n            }\n            return true;\n        })\n    console.log(\"filteredRecipeList\", filteredRecipeList);\n\n    if(gotData) {\n        return(\n            <div className={styles.recipeList}>\n                {\n                    filteredRecipeList.length > 0 ?\n                    filteredRecipeList.map((recipe) => {\n                        return (\n                            <RecipeListItem recipe={recipe} key={recipe.id}/>\n                        )\n                    })\n                    : (\n                        <div className={styles.noRecipeList}>\n                            <div className={styles.noRecipeImage}>\n                                <img src={image} alt=\"\"></img>\n                            </div>\n                            <div className={styles.text}>\n                                <div className={styles.title}>目前還沒有食譜哦！</div>\n                                <div className={styles.description}>分享自己的料理，<br/>一起加入健康食分吧！</div>\n                                <Link to=\"/writeRecipe\">\n                                    <button className={styles.fullBtn}>開始寫食譜</button>\n                                </Link>\n                            </div>\n                        </div>\n                    )\n                    \n                }\n            </div>\n        )\n    } else {\n        return(\n            <div></div>\n        )\n    }\n    \n}\n\nexport default RecipeList;","/Users/rosechen/EatHealth/eat-health/src/Components/Recipe/Recipe.js",["154","155","156","157","158","159","160"],"/Users/rosechen/EatHealth/eat-health/src/Components/Chart/Chart.js",["161"],"import { useState } from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\nconst Chart = ({color, percentage}) => {\n    return(\n        <PieChart\n            data={[{ value: percentage, key: 1, color }]}\n            reveal={percentage}\n            lineWidth={20}\n            startAngle={270}\n            viewBoxSize={[150, 150]}\n            background=\"#e0e0e0\"\n            lengthAngle={360}\n            labelPosition={0}\n            rounded\n            animate\n            center={[75, 75]}\n            animationDuration={2000}\n            label={({ dataEntry }) => Math.round(dataEntry.value) + '%'}\n            labelStyle={{fontWeight:\"bold\", fontSize:\"14px\"}}\n      />\n    )\n}\n\nexport default Chart;\n",["162","163"],"/Users/rosechen/EatHealth/eat-health/src/Components/Profile/Profile.js",["164","165","166"],"import { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, useRouteMatch, useHistory, NavLink, useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from \"./Profile.module.scss\";\nimport SubProfile from \"../SubProfile/SubProfile\";\n\nimport { db } from '../../firebase';\n\n\nconst Profile = ({ user }) => {\n    const [ profile, setProfile ] = useState({});\n    const [ recipes, setRecipes ] = useState(0);\n    const [ fans, setFans ] = useState(0);\n    const [ followings, setFollowings ] = useState([]);\n    const [ isFollowing, setIsFollowing ] = useState(false);\n    const [ gotFollowingsData, setGotFollowingsData ] = useState(false);\n\n\n    const { url, path } = useRouteMatch();\n    const { userId } = useParams();\n\n    useEffect(() => {\n        setGotFollowingsData(false); //\n        // 取得基本資訊\n        db.collection(\"users\").doc(userId).get().then(doc => {\n            const user = doc.data(); \n            setProfile(user);\n        })\n        // 取得寫的食譜數量\n        db.collection(\"recipes\").where(\"authorId\", \"==\", userId).get().then(docs => {\n            setRecipes(docs.size);\n        })\n        // 取得粉絲數量\n        db.collection(\"users\").doc(userId).collection(\"fans\").onSnapshot(snapshots => {\n            setFans(snapshots.size);\n        })\n        // 取得追蹤中使用者id\n        db.collection(\"users\").doc(userId).collection(\"followings\").get().then(docs => {\n            let followingList = []; \n            docs.forEach(doc => {\n                followingList = [ ...followingList, doc.data().followingId]\n            })\n            setFollowings(followingList);\n            setGotFollowingsData(true); //\n        })\n        // 取得使用者是否正在追蹤此人\n        if(user && user.uid !== userId) {\n            db.collection(\"users\").doc(user.uid).collection(\"followings\")\n            .onSnapshot(snapshot => {\n                snapshot.docs.forEach(doc  => {\n                    if(doc.id === userId){\n                        setIsFollowing(true);\n                    }\n                });\n            })\n        }\n    }, [userId]);\n\n    const toggleFollowing = () => {\n        setIsFollowing(!isFollowing);\n        db.collection(\"users\").doc(user.uid).collection(\"followings\").doc(userId).get().then(doc => {\n            doc.data() \n            ? db.collection(\"users\").doc(user.uid).collection(\"followings\").doc(userId).delete().then(() => (\n                db.collection(\"users\").doc(userId).collection(\"fans\").doc(user.uid).delete()\n            ))\n            : db.collection(\"users\").doc(user.uid).collection(\"followings\").doc(userId).set({followingId: userId}).then(() => (\n                db.collection(\"users\").doc(userId).collection(\"fans\").doc(user.uid).set({fanId: user.uid})\n            ))\n        })\n        .catch(err => console.log(err))\n    }\n\n    return(\n        <div className={styles.container}>\n            <div className={styles.user}>\n                <div className={styles.photo} >\n                    {\n                        profile ?\n                        <img src={profile.photoURL} alt=\"大頭照\"></img>\n                        : null\n                    }\n                </div>\n                <div className={styles.info}>\n                    <div className={styles.name}>\n                        {profile.displayName}\n                    </div>\n                    <div>{profile.email}</div>\n                </div>\n                <div>\n                    { user && user.uid !== userId && \n                        (\n                            isFollowing \n                            ? <button className={styles.greyBtn} onClick={toggleFollowing}><FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>&nbsp;已追蹤</button>\n                            : <button className={styles.darkBtn} onClick={toggleFollowing}>追蹤</button>\n                        )\n                    }\n                </div>\n                <div className={styles.datas}>\n                    <div className={styles.data}>\n                        <div className={styles.number}>{recipes}</div>\n                        <div>食譜</div>\n                    </div>\n                    <div className={styles.data}>\n                        <div className={styles.number}>{fans}</div>\n                        <div>粉絲</div>\n                    </div>\n                    <div className={styles.data}>\n                        <div className={styles.number}>{followings.length}</div>\n                        <div>追蹤中</div>\n                    </div>\n                </div>\n            </div>\n            <div className={styles.profile}>\n                <ul className={styles.navbar}>\n                    <NavLink exact to={`${url}/myRecipes`} activeClassName={styles.activeLink}><li>我的食譜</li></NavLink>\n                    { user.uid === userId && <NavLink exact to={`${url}/favorites`} activeClassName={styles.activeLink}><li>我的收藏</li></NavLink> }\n                    { user.uid === userId && <NavLink exact to={`${url}/followings`} activeClassName={styles.activeLink}><li>追蹤中</li></NavLink> }\n                </ul>\n                <div className={styles.content}>\n                    <Switch>\n                        <Route exact path={`${path}/:subProfile`} render={() => <SubProfile followings={followings} user={user} gotFollowingsData={gotFollowingsData} setGotFollowingsData={setGotFollowingsData}/>}/>\n                    </Switch>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Profile;","/Users/rosechen/EatHealth/eat-health/src/Components/Recipes/Recipes.js",["167"],"import { useEffect, useState } from \"react\";\nimport {  NavLink, Switch } from \"react-router-dom\";\n\nimport styles from \"./Recipes.module.scss\";\nimport RecipeList from \"../RecipeList/RecipeList\";\nimport CategoryBox from \"../CategoryBox/CategoryBox\";\n\nconst Recipes = () => {\n    const [categoryName, setCategoryName] = useState(\"全部料理\");\n    const [categoryEnglish, setCategoryEnglish ] = useState(\"ALL RECIPES\")\n    let urlParams = new URLSearchParams(window.location.search);\n    let category = urlParams.get(\"category\");\n    let mealTime = urlParams.get(\"mealTime\");\n    console.log(mealTime);\n\n\n    useEffect(() => {\n        switch(category) {\n            case \"all\" :\n                setCategoryName(\"全部料理\");\n                setCategoryEnglish(\"ALL RECIPES\");\n                break;\n            case \"balanced\" :\n                setCategoryName(\"均衡料理\");\n                setCategoryEnglish(\"BALANCED\");\n                break;\n            case \"lowcarbs\" :\n                setCategoryName(\"減醣料理\");\n                setCategoryEnglish(\"LOW CARBS\");\n                break;\n            case \"highpt\" :\n                setCategoryName(\"增肌料理\");\n                setCategoryEnglish(\"HIGH PROTEINS\");\n                break;\n            default:\n                setCategoryName(\"全部料理\");\n        }\n    }, [category]);\n\n    const checkActive = (query) => {\n        return mealTime === query;\n    }\n\n    return (\n        <div className={styles.recipesContainer}>\n            <div className={styles.banner}>\n                <div>{categoryName}</div>\n                <div className={styles.categoryEnglish}>{categoryEnglish}</div>\n            </div>\n            <div className={styles.container}>                \n                <div className={styles.main}>\n                    <div className={styles.recipes}>\n                        <div className={styles.mealTime}>\n                            <NavLink exact to={`/recipes?category=${category}`} activeClassName={styles.mealTimeActive} isActive={() => checkActive(null)}>全部</NavLink>\n                            <NavLink exact to={`/recipes?category=${category}&mealTime=breakfast`} activeClassName={styles.mealTimeActive} isActive={() => checkActive(\"breakfast\")}>早餐</NavLink>\n                            <NavLink exact to={`/recipes?category=${category}&mealTime=lunchDinner`} activeClassName={styles.mealTimeActive} isActive={() => checkActive(\"lunchDinner\")}>午 / 晚餐</NavLink>\n                            <NavLink exact to={`/recipes?category=${category}&mealTime=dessert`} activeClassName={styles.mealTimeActive} isActive={() => checkActive(\"dessert\")}>點心 / 下午茶</NavLink>\n                        </div>\n                        <RecipeList/>\n                    </div>\n                    <CategoryBox/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Recipes;",["168","169"],"/Users/rosechen/EatHealth/eat-health/src/Components/Comments/Comments.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/RecipeListItem/RecipeListItem.js",["170","171","172","173","174","175","176","177"],"import { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart, faCommentAlt } from '@fortawesome/free-regular-svg-icons'\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory, useRouteMatch, useParams, NavLink } from \"react-router-dom\";\n\nimport styles from \"./RecipeListItem.module.scss\";\nimport { db } from '../../firebase';\n\nconst RecipeListItem = ({ recipe }) => {\n    const [recipeData, setRecipeData] = useState(recipe);\n\n    useEffect(() => {\n        let liked = 0;\n        let comments = 0;\n        // 取得此食譜的讚數\n        db.collectionGroup(\"liked\").where(\"recipeId\", \"==\", recipe.id).onSnapshot((snapshots) => {\n            liked = snapshots.docs.length;\n            db.collection(\"recipes\").doc(recipe.id).update({liked: snapshots.docs.length});\n\n            // 取得此食譜的留言數\n            db.collection(\"recipes\").doc(recipe.id).collection(\"comments\").onSnapshot((snapshots => {\n                comments = snapshots.docs.length;\n                db.collection(\"recipes\").doc(recipe.id).update({comments: snapshots.docs.length});\n                setRecipeData({...recipeData, liked, comments});\n            }))\n        })\n    }, []);\n    \n\n    return (\n        <Link to={`/recipes/${recipeData.id}`}>\n            <div className={styles.recipe}>\n                <div className={styles.image}>\n                    <img src={recipeData.image} alt=\"食譜照片\"></img>\n                </div>\n                <div className={styles.content}>\n                    <div className={styles.title}>{recipeData.title}</div>\n                    <div className={styles.author}>By {recipeData.authorName}</div>\n                    <div><small>{recipeData.category}</small> <small>{recipeData.mealTime}</small></div>\n                    <div className={styles.likeComment}>\n                        <div>\n                            <FontAwesomeIcon icon={faHeart} style={{color:\"#8a949f\"}}/>\n                            <span className={styles.text}>{recipeData.liked} 個讚</span>\n                        </div>\n                        <div>\n                            <FontAwesomeIcon icon={faCommentAlt} style={{color:\"#8a949f\"}}/>\n                            <span className={styles.text}>{recipeData.comments} 則留言</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default RecipeListItem;","/Users/rosechen/EatHealth/eat-health/src/Components/SubProfile/SubProfile.js",["178","179","180","181","182","183"],"/Users/rosechen/EatHealth/eat-health/src/Components/FollowList/FollowList.js",["184","185"],"import { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheck } from \"@fortawesome/free-solid-svg-icons\";\n\n\n\nimport styles from \"./FollowList.module.scss\";\nimport { db } from \"../../firebase\";\nimport image from \"../../images/noFollowing.png\";\n\n\nconst FollowList = ({ followings, user, gotFollowingsData, setGotFollowingsData}) => {\n    const [ followingList, setFollowingList ] = useState([]);\n    // const [ gotData, setGotData ] = useState(false);\n\n    let history = useHistory();\n\n    useEffect(() => {\n        // setGotData(false); //\n\n        let newFollowingList = [];\n        followings.forEach(followingId => {\n            // 取得每個追蹤者的基本資訊\n            db.collection(\"users\").doc(followingId).get().then(doc => {\n                const { userId, displayName, photoURL } = doc.data();\n                newFollowingList = [ ...newFollowingList, { userId, displayName, photoURL, isFollowing: true}]; //\n                setFollowingList(newFollowingList);\n                // setGotData(true); //\n            })\n            // 取得每個追蹤者的食譜數\n            db.collection(\"recipes\").where(\"authorId\", \"==\", followingId).get().then(docs => {\n                newFollowingList = newFollowingList.map(item => {\n                    if(item.userId === followingId) {\n                        return { ...item, recipes: docs.size}\n                    }\n                    return item;\n                })\n                // 取得每個追蹤者的粉絲數\n                db.collection(\"users\").doc(followingId).collection(\"fans\").get().then(snapshots => {\n                    newFollowingList = newFollowingList.map(item => {\n                        if(item.userId === followingId) {\n                            return { ...item, fans: snapshots.size}\n                        }\n                        return item;\n                    })\n                    // 取得使用者是否正在追蹤每個追蹤者\n                    db.collection(\"users\").doc(user.uid).collection(\"followings\").get().then(snapshots => {\n                        snapshots.forEach(snapshot  => {\n                            newFollowingList = newFollowingList.map(item => {\n                                if(snapshot.id === item.userId){\n                                    return { ...item, isFollowing: true}\n                                }\n                                return item;\n                            })\n                        });\n                        setFollowingList(newFollowingList);\n                    })\n                })\n            })\n        })\n    }, [followings]);\n\n    const toggleFollowing = (index) => {\n        setFollowingList(followingList.map(item => {\n            if(item.userId === index) {\n                return { ...item, isFollowing: !item.isFollowing }\n            }\n            return item;\n        }));\n        followingList.forEach(item => {\n            if(item.userId === index) {\n                db.collection(\"users\").doc(user.uid).collection(\"followings\").doc(index).get().then(doc => {\n                    doc.data() \n                    ? db.collection(\"users\").doc(user.uid).collection(\"followings\").doc(index).delete().then(() => (\n                        db.collection(\"users\").doc(index).collection(\"fans\").doc(user.uid).delete()\n                    ))\n                    : db.collection(\"users\").doc(user.uid).collection(\"followings\").doc(index).set({followingId: index}).then(() => (\n                        db.collection(\"users\").doc(index).collection(\"fans\").doc(user.uid).set({fanId: user.uid})\n                    ))\n                })\n                .catch(err => console.log(err))\n            }\n        });\n    }\n\n    const handleClickMore = () => {\n        history.push(\"/recipes/?category=all\");\n    }\n    \n    if(gotFollowingsData) {\n        return (\n            <div className={styles.followListContainer}>\n                {\n                    // followingList.length === 0 ?\n                    followings.length === 0 ?\n                    (\n                        <div className={styles.noFollowList}>\n                            <div className={styles.noFollowImage}>\n                                <img src={image} alt=\"\"></img>\n                            </div>\n                            <div className={styles.text}>\n                                <div className={styles.title}>目前沒有追蹤中的人哦！</div>\n                                <div className={styles.description}>追蹤後即可於個人頁面<br/>查看其他人寫的食譜</div>\n                                <button className={styles.fullBtn} onClick={handleClickMore}>查看更多食譜</button>\n                            </div>\n                        </div>\n                    ) :\n                    followingList.map(following => {\n                        return (\n                            <div  className={styles.follow} key={following.userId}>\n                                <Link to={`/profile/${following.userId}/myRecipes`}>\n                                    <div className={styles.user}>\n                                        <div className={styles.image}>\n                                            <img src={following.photoURL} alt=\"\"></img>\n                                        </div>\n                                        <div className={styles.info}>\n                                            <div className={styles.name}>{following.displayName}</div>\n                                            <div className={styles.details}>\n                                                <div className={styles.fans}>粉絲&nbsp;{following.fans}</div>\n                                                <div className={styles.recipes}>食譜&nbsp;{following.recipes}</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Link>\n                                <div className={styles.followBtn}>\n                                    {\n                                        following.isFollowing \n                                        ? <button className={styles.greyBtn} onClick={() => toggleFollowing(following.userId)}><FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>&nbsp;已追蹤</button>\n                                        : <button className={styles.darkBtn} onClick={() => toggleFollowing(following.userId)}>追蹤</button>\n                                    }\n                                </div>\n                            </div>\n                        )\n                    })\n    \n                }\n            </div>\n        )\n    } else {\n        return(\n            <div></div>\n        )\n    }\n\n    \n}\n\nexport default FollowList;","/Users/rosechen/EatHealth/eat-health/src/Components/Steps/Steps.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/CategoryBox/CategoryBox.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/RecommendedBox/RecommendedBox.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Loading/Loading.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Modal/Modal.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Alert/Alert.js",[],{"ruleId":"186","severity":1,"message":"187","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":33},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"190","replacedBy":"194"},{"ruleId":"192","replacedBy":"195"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":33},{"ruleId":"186","severity":1,"message":"196","line":1,"column":35,"nodeType":"188","messageId":"189","endLine":1,"endColumn":41},{"ruleId":"186","severity":1,"message":"197","line":1,"column":43,"nodeType":"188","messageId":"189","endLine":1,"endColumn":48},{"ruleId":"186","severity":1,"message":"198","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":19},{"ruleId":"186","severity":1,"message":"199","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":18},{"ruleId":"190","replacedBy":"200"},{"ruleId":"192","replacedBy":"201"},{"ruleId":"186","severity":1,"message":"202","line":14,"column":8,"nodeType":"188","messageId":"189","endLine":14,"endColumn":20},{"ruleId":"203","severity":1,"message":"204","line":46,"column":6,"nodeType":"205","endLine":46,"endColumn":11,"suggestions":"206"},{"ruleId":"190","replacedBy":"207"},{"ruleId":"192","replacedBy":"208"},{"ruleId":"190","replacedBy":"209"},{"ruleId":"192","replacedBy":"210"},{"ruleId":"186","severity":1,"message":"187","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":33},{"ruleId":"186","severity":1,"message":"196","line":2,"column":35,"nodeType":"188","messageId":"189","endLine":2,"endColumn":41},{"ruleId":"186","severity":1,"message":"197","line":2,"column":43,"nodeType":"188","messageId":"189","endLine":2,"endColumn":48},{"ruleId":"186","severity":1,"message":"211","line":2,"column":56,"nodeType":"188","messageId":"189","endLine":2,"endColumn":66},{"ruleId":"186","severity":1,"message":"212","line":2,"column":68,"nodeType":"188","messageId":"189","endLine":2,"endColumn":81},{"ruleId":"186","severity":1,"message":"213","line":2,"column":94,"nodeType":"188","messageId":"189","endLine":2,"endColumn":101},{"ruleId":"203","severity":1,"message":"214","line":77,"column":8,"nodeType":"205","endLine":77,"endColumn":20,"suggestions":"215"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":33},{"ruleId":"186","severity":1,"message":"196","line":1,"column":35,"nodeType":"188","messageId":"189","endLine":1,"endColumn":41},{"ruleId":"186","severity":1,"message":"197","line":1,"column":43,"nodeType":"188","messageId":"189","endLine":1,"endColumn":48},{"ruleId":"186","severity":1,"message":"211","line":1,"column":56,"nodeType":"188","messageId":"189","endLine":1,"endColumn":66},{"ruleId":"186","severity":1,"message":"212","line":1,"column":68,"nodeType":"188","messageId":"189","endLine":1,"endColumn":81},{"ruleId":"186","severity":1,"message":"216","line":2,"column":31,"nodeType":"188","messageId":"189","endLine":2,"endColumn":37},{"ruleId":"203","severity":1,"message":"217","line":155,"column":8,"nodeType":"205","endLine":155,"endColumn":35,"suggestions":"218"},{"ruleId":"186","severity":1,"message":"219","line":1,"column":10,"nodeType":"188","messageId":"189","endLine":1,"endColumn":18},{"ruleId":"190","replacedBy":"220"},{"ruleId":"192","replacedBy":"221"},{"ruleId":"186","severity":1,"message":"187","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":33},{"ruleId":"186","severity":1,"message":"211","line":2,"column":65,"nodeType":"188","messageId":"189","endLine":2,"endColumn":75},{"ruleId":"203","severity":1,"message":"217","line":59,"column":8,"nodeType":"205","endLine":59,"endColumn":16,"suggestions":"222"},{"ruleId":"186","severity":1,"message":"196","line":2,"column":20,"nodeType":"188","messageId":"189","endLine":2,"endColumn":26},{"ruleId":"190","replacedBy":"223"},{"ruleId":"192","replacedBy":"224"},{"ruleId":"186","severity":1,"message":"187","line":4,"column":27,"nodeType":"188","messageId":"189","endLine":4,"endColumn":33},{"ruleId":"186","severity":1,"message":"196","line":4,"column":35,"nodeType":"188","messageId":"189","endLine":4,"endColumn":41},{"ruleId":"186","severity":1,"message":"197","line":4,"column":43,"nodeType":"188","messageId":"189","endLine":4,"endColumn":48},{"ruleId":"186","severity":1,"message":"211","line":4,"column":56,"nodeType":"188","messageId":"189","endLine":4,"endColumn":66},{"ruleId":"186","severity":1,"message":"212","line":4,"column":68,"nodeType":"188","messageId":"189","endLine":4,"endColumn":81},{"ruleId":"186","severity":1,"message":"225","line":4,"column":83,"nodeType":"188","messageId":"189","endLine":4,"endColumn":92},{"ruleId":"186","severity":1,"message":"213","line":4,"column":94,"nodeType":"188","messageId":"189","endLine":4,"endColumn":101},{"ruleId":"203","severity":1,"message":"226","line":27,"column":8,"nodeType":"205","endLine":27,"endColumn":10,"suggestions":"227"},{"ruleId":"186","severity":1,"message":"187","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":33},{"ruleId":"186","severity":1,"message":"196","line":1,"column":35,"nodeType":"188","messageId":"189","endLine":1,"endColumn":41},{"ruleId":"186","severity":1,"message":"197","line":1,"column":43,"nodeType":"188","messageId":"189","endLine":1,"endColumn":48},{"ruleId":"186","severity":1,"message":"212","line":1,"column":50,"nodeType":"188","messageId":"189","endLine":1,"endColumn":63},{"ruleId":"186","severity":1,"message":"211","line":1,"column":65,"nodeType":"188","messageId":"189","endLine":1,"endColumn":75},{"ruleId":"186","severity":1,"message":"213","line":1,"column":77,"nodeType":"188","messageId":"189","endLine":1,"endColumn":84},{"ruleId":"186","severity":1,"message":"225","line":2,"column":28,"nodeType":"188","messageId":"189","endLine":2,"endColumn":37},{"ruleId":"203","severity":1,"message":"228","line":62,"column":8,"nodeType":"205","endLine":62,"endColumn":20,"suggestions":"229"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","no-native-reassign",["230"],"no-negated-in-lhs",["231"],["230"],["231"],"'Switch' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","'faSearch' is defined but never used.",["230"],["231"],"'foodDatabase' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postRecipe'. Either include it or remove the dependency array.","ArrayExpression",["232"],["230"],["231"],["230"],["231"],"'useHistory' is defined but never used.","'useRouteMatch' is defined but never used.","'NavLink' is defined but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["233"],"'useRef' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["234"],"'useState' is defined but never used.",["230"],["231"],["235"],["230"],["231"],"'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'recipe.id' and 'recipeData'. Either include them or remove the dependency array. You can also do a functional update 'setRecipeData(r => ...)' if you only need 'recipeData' in the 'setRecipeData' call.",["236"],"React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["237"],"no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [postRecipe, url]",{"range":"250","text":"251"},"Update the dependencies array to be: [subProfile, userId]",{"range":"252","text":"253"},"Update the dependencies array to be: [recipe.authorId, recipeId, user]",{"range":"254","text":"255"},"Update the dependencies array to be: [user, userId]",{"range":"256","text":"257"},"Update the dependencies array to be: [recipe.id, recipeData]",{"range":"258","text":"259"},"Update the dependencies array to be: [followings, user.uid]",{"range":"260","text":"261"},[3314,3319],"[postRecipe, url]",[3054,3066],"[subProfile, userId]",[7169,7196],"[recipe.authorId, recipeId, user]",[2163,2171],"[user, userId]",[1205,1207],"[recipe.id, recipeData]",[2627,2639],"[followings, user.uid]"]
[{"/Users/rosechen/EatHealth/eat-health/src/App.js":"1","/Users/rosechen/EatHealth/eat-health/src/index.js":"2","/Users/rosechen/EatHealth/eat-health/src/reportWebVitals.js":"3","/Users/rosechen/EatHealth/eat-health/src/firebase.js":"4","/Users/rosechen/EatHealth/eat-health/src/Components/Header/Header.js":"5","/Users/rosechen/EatHealth/eat-health/src/Components/UploadImage/UploadImage.js":"6","/Users/rosechen/EatHealth/eat-health/src/Components/WriteRecipe/WriteRecipe.js":"7","/Users/rosechen/EatHealth/eat-health/src/Components/Footer/Footer.js":"8","/Users/rosechen/EatHealth/eat-health/src/Components/Ingredients/Ingredients.js":"9","/Users/rosechen/EatHealth/eat-health/src/Components/Home/Home.js":"10","/Users/rosechen/EatHealth/eat-health/src/Components/SignUp/SignUp.js":"11","/Users/rosechen/EatHealth/eat-health/src/Components/LogIn/LogIn.js":"12","/Users/rosechen/EatHealth/eat-health/src/PrivateRoute.js":"13","/Users/rosechen/EatHealth/eat-health/src/Components/RecipeList/RecipeList.js":"14","/Users/rosechen/EatHealth/eat-health/src/Components/Recipe/Recipe.js":"15","/Users/rosechen/EatHealth/eat-health/src/Components/Chart/Chart.js":"16","/Users/rosechen/EatHealth/eat-health/src/Components/Profile/Profile.js":"17","/Users/rosechen/EatHealth/eat-health/src/Components/Recipes/Recipes.js":"18","/Users/rosechen/EatHealth/eat-health/src/Components/Comments/Comments.js":"19","/Users/rosechen/EatHealth/eat-health/src/Components/RecipeListItem/RecipeListItem.js":"20","/Users/rosechen/EatHealth/eat-health/src/Components/SubProfile/SubProfile.js":"21","/Users/rosechen/EatHealth/eat-health/src/Components/FollowList/FollowList.js":"22","/Users/rosechen/EatHealth/eat-health/src/Components/Steps/Steps.js":"23","/Users/rosechen/EatHealth/eat-health/src/Components/CategoryBox/CategoryBox.js":"24","/Users/rosechen/EatHealth/eat-health/src/Components/RecommendedBox/RecommendedBox.js":"25"},{"size":2133,"mtime":1608555996431,"results":"26","hashOfConfig":"27"},{"size":587,"mtime":1607916544722,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1606282798157,"results":"29","hashOfConfig":"27"},{"size":886,"mtime":1606795149099,"results":"30","hashOfConfig":"27"},{"size":5405,"mtime":1608599603829,"results":"31","hashOfConfig":"27"},{"size":1035,"mtime":1608275624865,"results":"32","hashOfConfig":"27"},{"size":8513,"mtime":1608362697198,"results":"33","hashOfConfig":"27"},{"size":185,"mtime":1606654453659,"results":"34","hashOfConfig":"27"},{"size":2375,"mtime":1608258432068,"results":"35","hashOfConfig":"27"},{"size":3391,"mtime":1608556494467,"results":"36","hashOfConfig":"27"},{"size":3302,"mtime":1608555544808,"results":"37","hashOfConfig":"27"},{"size":2324,"mtime":1608555975074,"results":"38","hashOfConfig":"27"},{"size":396,"mtime":1607912254077,"results":"39","hashOfConfig":"27"},{"size":4273,"mtime":1608090151864,"results":"40","hashOfConfig":"27"},{"size":15293,"mtime":1608554746529,"results":"41","hashOfConfig":"27"},{"size":717,"mtime":1607934579213,"results":"42","hashOfConfig":"27"},{"size":5450,"mtime":1608531322527,"results":"43","hashOfConfig":"27"},{"size":2332,"mtime":1608476983835,"results":"44","hashOfConfig":"27"},{"size":5568,"mtime":1607659871407,"results":"45","hashOfConfig":"27"},{"size":2742,"mtime":1608447392890,"results":"46","hashOfConfig":"27"},{"size":586,"mtime":1608189366843,"results":"47","hashOfConfig":"27"},{"size":5460,"mtime":1608193805847,"results":"48","hashOfConfig":"27"},{"size":2693,"mtime":1608380647923,"results":"49","hashOfConfig":"27"},{"size":1372,"mtime":1608520155166,"results":"50","hashOfConfig":"27"},{"size":2056,"mtime":1608553906389,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"17pns1l",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rosechen/EatHealth/eat-health/src/App.js",["111","112","113"],"/Users/rosechen/EatHealth/eat-health/src/index.js",[],["114","115"],"/Users/rosechen/EatHealth/eat-health/src/reportWebVitals.js",[],["116","117"],"/Users/rosechen/EatHealth/eat-health/src/firebase.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Header/Header.js",["118","119","120","121","122","123"],"/Users/rosechen/EatHealth/eat-health/src/Components/UploadImage/UploadImage.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/WriteRecipe/WriteRecipe.js",["124"],"import { useEffect, useState } from \"react\";\nimport firebase from \"firebase/app\";\nimport { db, storage } from \"../../firebase\";\nimport Select from \"react-select\";\nimport { useHistory } from \"react-router-dom\";\n\nimport UploadImage from \"../UploadImage/UploadImage\";\nimport Ingredients from \"../Ingredients/Ingredients\";\nimport Steps from \"../Steps/Steps\";\nimport styles from \"./WriteRecipe.module.scss\";\nimport foodDatabase from \"../../foodDatabase.json\";\nimport tipsBulb from \"../../images/tips-bulb.svg\";\nimport defaultImg from \"../../images/upload.png\"\n\n\n\n// react-select options\nconst options = foodDatabase.foods.map(food => ({ value: food.id, label: food.name, ...food }));\nconst recipeType = [{ value: 0, label: \"均衡料理\", name:\"category\"}, { value: 1, label: \"減醣料理\", name:\"category\"}, { value: 2, label: \"增肌料理\", name:\"category\"}];\nconst recipeTime = [{ value: 0, label: \"早餐\", name:\"mealTime\"}, { value: 1, label: \"午晚餐\", name:\"mealTime\"}, { value: 2, label: \"點心\", name:\"mealTime\"}];\nconst portion = [{ value: 0, label: \"1\", name: \"portion\"}, { value: 1, label: \"2\", name: \"portion\"}, { value: 2, label: \"3\", name: \"portion\"}, { value: 3, label: \"4\", name: \"portion\"}, { value: 4, label: \"5\", name: \"portion\"}, { value: 5, label: \"6\", name: \"portion\"}, { value: 6, label: \"7\", name: \"portion\"}, { value: 7, label: \"8\", name: \"portion\"}, { value: 8, label: \"9\", name: \"portion\"}, { value: 9, label: \"10+\", name: \"portion\"}];\nconst cookTime = [{ value: 0, label: \"5\", name: \"cookTime\"}, { value: 1, label: \"10\", name: \"cookTime\"}, { value: 2, label: \"15\", name: \"cookTime\"}, { value: 3, label: \"20\", name: \"cookTime\"}, { value: 4, label: \"30\", name: \"cookTime\"}, { value: 5, label: \"45\", name: \"cookTime\"}, { value: 6, label: \"60\", name: \"cookTime\"}, { value: 7, label: \"90\", name: \"cookTime\"}, { value: 8, label: \"120+\", name: \"cookTime\"}];\n\n\nconst WriteRecipe = ({user}) => {\n  let history = useHistory();\n\n  const [ inputs, setInputs ] = useState({ title: \"\", category: \"\", mealTime: \"\", summary: \"\", portion: \"\",cookTime: \"\",step1: \"\",step2: \"\",step3: \"\",step4: \"\",tips: \"\"});\n  const [ ingredients, setIngredients ] = useState([{uid: `${new Date().getTime()}-1`, value:\"\", label:\"\", id:\"\",type:\"\", name:\"\",calorie:0, carb:0, protein:0, fat:0, qty:\"\"}, {uid: `${new Date().getTime()}-2`, value:\"\", label:\"\", id:\"\",type:\"\", name:\"\",calorie:0, carb:0, protein:0, fat:0, qty:\"\"}]);\n  const [ steps, setSteps ] = useState([{uid: `${new Date().getTime()}-1`, text:\"\", imageUrl: null, objectUrl: defaultImg, file: null}, {uid: `${new Date().getTime()}-2`, text:\"\", imageUrl: null, objectUrl: defaultImg, file: null}, {uid: `${new Date().getTime()}-3`, text:\"\", imageUrl: null, objectUrl: defaultImg, file: null}, {uid: `${new Date().getTime()}-4`, text:\"\", imageUrl: null, objectUrl: defaultImg, file: null},])\n  const [ file, setFile ] = useState(null); // 上傳到storage的主圖\n  const [ url, setUrl ] = useState(null); // 從storage取得的url\n  const [ isLoading, setIsLoading ] = useState(false);\n\n  useEffect(() => {\n    if(url) {\n      postRecipe();\n    }\n  }, [url]);\n\n  const handleInputChange = (e) => {\n    setInputs({...inputs, [e.target.name]: e.target.value});\n  }\n\n  const handleSelectChange = (select) => {\n    setInputs({...inputs, [select.name]: select.label});\n  }\n\n  const uploadImage = () => {\n    if(file) {\n      setIsLoading(true);\n      let promises = [];\n\n      steps.forEach(step => {\n        if(step.file) {\n          promises = [\n            ...promises,\n            storage.ref(`/recipeImages/${new Date().getTime()}-${step.file.name}`).put(step.file)\n            .then(snapshot => snapshot.ref.getDownloadURL())\n            .then(downloadURL => { \n              setSteps( prevSteps => prevSteps.map(prevStep => {\n                if(prevStep.uid === step.uid) {\n                  return ({ ...prevStep, imageUrl: downloadURL })\n                }\n                return prevStep;\n              }))\n            })\n          ]\n        } \n      })\n\n      Promise.all(promises).then(response => {\n        storage.ref(`/recipeImages/${new Date().getTime()}-${file.name}`).put(file)\n        .then(snapshot => snapshot.ref.getDownloadURL())\n        .then(downloadURL => { setUrl(downloadURL); });\n      })\n\n      // 上傳每個步驟照片到storage > 取得url > 更新到state(陣列)\n      // steps.forEach(step => {\n      //   if(step.file) {\n      //     storage.ref(`/recipeImages/${new Date().getTime()}-${step.file.name}`).put(step.file)\n      //     .then(snapshot => snapshot.ref.getDownloadURL())\n      //     .then(downloadURL => { \n      //       setSteps( prevSteps => prevSteps.map(prevStep => {\n      //         if(prevStep.uid === step.uid) {\n      //           return ({ ...prevStep, imageUrl: downloadURL })\n      //         }\n      //         return prevStep;\n      //       }))\n      //     });\n      //   } \n      // })\n      // 上傳主照片到storage > 取得url > 更新到state（字串）\n      // storage.ref(`/recipeImages/${new Date().getTime()}-${file.name}`).put(file)\n      //   .then(snapshot => snapshot.ref.getDownloadURL())\n      //   .then(downloadURL => { setUrl(downloadURL); });\n\n    } else {\n      alert(\"請上傳食譜照片\");\n    }\n  };\n\n  const postRecipe = () => {\n    let newSteps = steps.map(step => {\n      return ({ \n        uid: step.uid,\n        imageUrl: step.imageUrl,\n        text: step.text\n      })\n    })\n    // 上傳最新的state到firestore\n    let recipe = db.collection('recipes').doc();\n      recipe.set({\n        title: inputs.title,\n        category: inputs.category,\n        mealTime: inputs.mealTime,\n        summary: inputs.summary,\n        portion: inputs.portion,\n        cookTime: inputs.cookTime,\n        steps: newSteps,\n        tips: inputs.tips,\n        id: recipe.id,\n        image: url,\n        ingredients,\n        createdTime: firebase.firestore.FieldValue.serverTimestamp(),\n        authorId: user.uid,\n        authorPhotoURL: user.photoURL,\n        authorName: user.displayName,\n    })\n    setIsLoading(false);\n    history.push(\"/recipes\");\n  }\n\n  return (\n    <main className={styles.container}>\n      <div>\n        <div className={styles.text}>食譜名稱<span>（20字以內）</span></div>\n        <input className={styles.input} name=\"title\" value={inputs.title} onChange={handleInputChange} type=\"text\" placeholder=\"請輸入食譜名稱\"></input>\n      </div>\n      <div className={styles.flex}>\n        <div className={styles.recipeType}>\n          <div className={styles.text}>食譜分類</div>\n          <Select options={recipeType} onChange={handleSelectChange} placeholder=\"請選擇...\"/>\n        </div>\n        <div className={styles.recipeTime}>\n          <div className={styles.text}>適合時間</div>\n          <Select options={recipeTime} onChange={handleSelectChange} placeholder=\"請選擇...\"/>\n        </div>\n      </div>\n      <UploadImage \n        file={file} \n        setFile={setFile}      \n      />\n      <div>\n        <div className={styles.text}>簡介</div>\n        <textarea placeholder=\"請輸入食譜描述（最多200字）\" name=\"summary\" value={inputs.summary} onChange={handleInputChange}></textarea>\n      </div>\n      <div className={styles.flex}>\n        <div className={styles.portion}>\n          <div className={styles.text}>份量<span>（人份）</span></div>\n          <Select options={portion} onChange={handleSelectChange} placeholder=\"請選擇...\"/>\n        </div>\n        <div className={styles.cookTime}>\n          <div className={styles.text}>烹調時間<span>（分鐘）</span></div>\n          <Select options={cookTime} onChange={handleSelectChange} placeholder=\"請選擇...\"/>\n        </div>\n      </div>\n      <Ingredients \n        options={options} \n        ingredients={ingredients}\n        setIngredients={setIngredients}\n      />\n      <Steps \n        steps={steps}\n        setSteps={setSteps}\n      />\n      <div className={styles.tips}>\n        <img src={tipsBulb} alt=\"小叮嚀\" style={{width: \"30px\"}}/>\n        <span className={styles.text}><mark>小叮嚀</mark></span>\n        <textarea placeholder=\"請輸入食譜小叮嚀\" name=\"tips\" value={inputs.tips} onChange={handleInputChange}></textarea>\n      </div>\n      <div className={styles.flex}>\n        <button className={styles.fullBtn} onClick={uploadImage}>{isLoading ? \"發布中...\" : \"發布食譜\"}</button>\n        <button className={styles.lineBtn}>取消</button>\n      </div>\n    </main>\n  );\n}\nexport default WriteRecipe;",["125","126"],"/Users/rosechen/EatHealth/eat-health/src/Components/Footer/Footer.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Ingredients/Ingredients.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/Home/Home.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/SignUp/SignUp.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/LogIn/LogIn.js",[],"/Users/rosechen/EatHealth/eat-health/src/PrivateRoute.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/RecipeList/RecipeList.js",["127","128","129","130","131","132","133","134","135","136","137","138"],"/Users/rosechen/EatHealth/eat-health/src/Components/Recipe/Recipe.js",["139","140","141","142","143","144","145","146"],"/Users/rosechen/EatHealth/eat-health/src/Components/Chart/Chart.js",["147"],"import { useState } from 'react';\nimport { PieChart } from 'react-minimal-pie-chart';\n\n\nconst Chart = ({color, percentage}) => {\n    return(\n        <PieChart\n            data={[{ value: percentage, key: 1, color }]}\n            reveal={percentage}\n            lineWidth={20}\n            startAngle={270}\n            viewBoxSize={[150, 150]}\n            background=\"#e0e0e0\"\n            lengthAngle={360}\n            labelPosition={0}\n            rounded\n            animate\n            center={[75, 75]}\n            animationDuration={2000}\n            label={({ dataEntry }) => Math.round(dataEntry.value) + '%'}\n            labelStyle={{fontWeight:\"bold\", fontSize:\"14px\"}}\n      />\n    )\n}\n\nexport default Chart;\n","/Users/rosechen/EatHealth/eat-health/src/Components/Profile/Profile.js",["148","149","150"],"/Users/rosechen/EatHealth/eat-health/src/Components/Recipes/Recipes.js",["151"],"/Users/rosechen/EatHealth/eat-health/src/Components/Comments/Comments.js",["152","153"],"import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons'\n\nimport styles from \"./Comments.module.scss\";\nimport defaultPhoto from \"../../images/avatar-default.png\";\nimport firebase from \"firebase/app\";\nimport { db } from \"../../firebase\";\nimport loading from \"../../images/rolling.gif\";\n\nconst Comments = ({ user }) => {\n    const [input, setInput] = useState(\"\");\n    const [commentsList, setCommentsList] = useState([]);\n    const { recipeId } = useParams();\n\n    useEffect(() => {\n        db.collection(\"recipes\").doc(recipeId).collection(\"comments\")\n        .orderBy(\"createdTime\", \"desc\")\n        .onSnapshot(snapshot => {\n            const data = snapshot.docs.map(doc => ({\n                ...doc.data(),\n                isEditing: false,\n            }))\n            setCommentsList(data);\n        })\n    }, []);\n\n    const handleInputChange = (e) => {\n        setInput(e.target.value);\n    }\n\n    const postComment = () => {\n        let doc = db.collection(\"recipes\").doc(recipeId).collection(\"comments\").doc();\n        doc.set({\n            writerId: user.uid,\n            writerDisplayName: user.displayName,\n            writerPhotoURL: user.photoURL,\n            content: input,\n            createdTime: firebase.firestore.FieldValue.serverTimestamp(),\n            commentId: doc.id,\n        });\n        setInput(\"\");\n    }\n\n    const handleEditing = (index) => {\n        setCommentsList(commentsList.map(item => {\n            if(item.commentId === index) {\n                return ({\n                    ...item,\n                    isEditing: !item.isEditing,\n                })\n            }\n            return item;\n        }));\n    }\n\n    const deleteComment = (index) => {\n        db.collection(\"recipes\").doc(recipeId).collection(\"comments\").doc(index).delete()\n        .then(result => console.log(\"成功刪除評論\"))\n        .catch(err => console.log(err))\n    }\n\n    // 依照登入狀況render評論section\n    let writeComment;\n    if (user) {\n        writeComment = \n        <div className={styles.form}>\n            <img src={user.photoURL} alt=\"\"></img>\n            <div className={styles.input}>\n                <textarea value={input} onChange={handleInputChange} placeholder=\"發表對這個食譜的想法或試做的心得吧！\"></textarea>\n                {\n                    input.trim().length > 0 ?\n                    <button className={styles.fullBtn} onClick={postComment}>發布留言</button>\n                    : <button className={styles.fullBtn} onClick={postComment} disabled>發布留言</button>\n                }\n            </div>\n        </div>\n    } else {\n        writeComment = \n        <div className={styles.form}>\n            <img src={defaultPhoto} alt=\"\"></img>\n            <div className={styles.input}>\n                <textarea value={input} onChange={handleInputChange} placeholder=\"嗨訪客，請先登入才能發表留言哦！\" disabled></textarea>\n                <button className={styles.fullBtn} onClick={postComment} disabled>發布留言</button>\n            </div>\n        </div>\n    }\n\n    return(\n        <div className={styles.commentsContainer}>\n            <div className={styles.title}>留言 {commentsList.length} 則</div>\n            { writeComment }\n            <div>\n                {\n                    commentsList.map(comment => {\n                        if (comment.writerId === user.uid) {\n                            return (\n                                <div className={styles.comment} key={comment.commentId}>\n                                    <img src={comment.writerPhotoURL} alt=\"\"></img>\n                                    <div className={styles.body}>\n                                    <div className={styles.name}>{comment.writerDisplayName}<span>{comment.createdTime && comment.createdTime.toDate().toLocaleDateString()}</span></div>\n                                        <div>{comment.content}</div>\n                                    </div>\n                                    <div className={styles.edit} onClick={() => handleEditing(comment.commentId)}>\n                                        <FontAwesomeIcon icon={faEllipsisH}/>\n                                        {\n                                            comment.isEditing && \n                                            <div className={styles.delete} onClick={() => deleteComment(comment.commentId)}>\n                                                <div>刪除留言</div>\n                                            </div>\n                                        }\n                                    </div>\n                                </div>\n                            )\n                        }\n                        return (\n                            <div className={styles.comment} key={comment.commentId}>\n                                <img src={comment.writerPhotoURL} alt=\"\"></img>\n                                <div className={styles.body}>\n                                    <div className={styles.name}>{comment.writerDisplayName}<span>{comment.createdTime && comment.createdTime.toDate().toLocaleDateString()}</span></div>\n                                    <div>{comment.content}</div>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Comments;","/Users/rosechen/EatHealth/eat-health/src/Components/RecipeListItem/RecipeListItem.js",["154","155","156","157","158","159","160","161"],"import { useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faHeart, faCommentAlt } from '@fortawesome/free-regular-svg-icons'\nimport { BrowserRouter as Router, Switch, Route, Link, useHistory, useRouteMatch, useParams, NavLink } from \"react-router-dom\";\n\nimport styles from \"./RecipeListItem.module.scss\";\nimport { db } from '../../firebase';\n\nconst RecipeListItem = ({ recipe }) => {\n    const [recipeData, setRecipeData] = useState(recipe);\n\n    useEffect(() => {\n        let liked = 0;\n        let comments = 0;\n        // 取得此食譜的讚數\n        db.collectionGroup(\"liked\").where(\"recipeId\", \"==\", recipe.id).onSnapshot((snapshots) => {\n            // let liked = 0;\n            // snapshots.forEach(snapshot => {\n            //     if(snapshot) {\n            //         liked++;\n            //     }\n            // })\n\n            // setRecipeData({...recipeData, liked:snapshots.docs.length})\n            liked = snapshots.docs.length;\n            db.collection(\"recipes\").doc(recipe.id).update({liked: snapshots.docs.length});\n\n            // 取得此食譜的留言數\n            db.collection(\"recipes\").doc(recipe.id).collection(\"comments\").onSnapshot((snapshots => {\n                comments = snapshots.docs.length;\n                db.collection(\"recipes\").doc(recipe.id).update({comments: snapshots.docs.length});\n                setRecipeData({...recipeData, liked, comments});\n            }))\n        })\n    }, []);\n    \n\n    return (\n        <Link to={`/recipes/${recipeData.id}`}>\n            <div className={styles.recipe}>\n                <div className={styles.image}>\n                    <img src={recipeData.image} alt=\"食譜照片\"></img>\n                </div>\n                <div className={styles.content}>\n                    <div className={styles.title}>{recipeData.title}</div>\n                    <div className={styles.author}>By {recipeData.authorName}</div>\n                    <div><small>{recipeData.category}</small> <small>{recipeData.mealTime}</small></div>\n                    <div className={styles.likeComment}>\n                        <div>\n                            <FontAwesomeIcon icon={faHeart} style={{color:\"#8a949f\"}}/>\n                            <span className={styles.text}>{recipeData.liked} 個讚</span>\n                        </div>\n                        <div>\n                            <FontAwesomeIcon icon={faCommentAlt} style={{color:\"#8a949f\"}}/>\n                            <span className={styles.text}>{recipeData.comments} 則留言</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </Link>\n    )\n}\n\nexport default RecipeListItem;","/Users/rosechen/EatHealth/eat-health/src/Components/SubProfile/SubProfile.js",["162","163","164","165","166","167"],"import { BrowserRouter as Router, Switch, Route, useRouteMatch, useHistory, NavLink, useParams } from \"react-router-dom\";\n\nimport RecipeList from \"../RecipeList/RecipeList\";\nimport FollowList from \"../FollowList/FollowList\";\n\nconst SubProfile = ({ followings, user }) => {\n    let { subProfile } = useParams();\n    return (\n        <div>\n            {\n                subProfile !== \"followings\"  \n                ? <RecipeList subProfile={subProfile}/>\n                : <FollowList followings={followings} user={user}/>\n            }\n        </div>\n    )\n}\n\nexport default SubProfile;","/Users/rosechen/EatHealth/eat-health/src/Components/FollowList/FollowList.js",["168","169"],"import { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\n\n\nimport styles from \"./FollowList.module.scss\";\nimport { db } from '../../firebase';\n\n\nconst FollowList = ({ followings, user }) => {\n    const [ followingList, setFollowingList ] = useState([]);\n\n    useEffect(() => {\n        let newFollowingList = [];\n        followings.forEach(followingId => {\n            // 取得每個追蹤者的基本資訊\n            db.collection(\"users\").doc(followingId).get().then(doc => {\n                const { userId, displayName, photoURL } = doc.data();\n                newFollowingList = [ ...newFollowingList, { userId, displayName, photoURL, isFollowing: false}];\n                setFollowingList(newFollowingList)\n            })\n            // 取得每個追蹤者的食譜數\n            db.collection(\"recipes\").where(\"authorId\", \"==\", followingId).get().then(docs => {\n                newFollowingList = newFollowingList.map(item => {\n                    if(item.userId === followingId) {\n                        return { ...item, recipes: docs.size}\n                    }\n                    return item;\n                })\n                // 取得每個追蹤者的粉絲數\n                db.collection(\"users\").doc(followingId).collection(\"fans\").get().then(snapshots => {\n                    newFollowingList = newFollowingList.map(item => {\n                        if(item.userId === followingId) {\n                            return { ...item, fans: snapshots.size}\n                        }\n                        return item;\n                    })\n                    // 取得使用者是否正在追蹤每個追蹤者\n                    db.collection(\"users\").doc(user.uid).collection(\"followings\").get().then(snapshots => {\n                        snapshots.forEach(snapshot  => {\n                            newFollowingList = newFollowingList.map(item => {\n                                if(snapshot.id === item.userId){\n                                    return { ...item, isFollowing: true}\n                                }\n                                return item;\n                            })\n                        });\n                        setFollowingList(newFollowingList);\n                    })\n                })\n            })\n        })\n    }, [followings]);\n\n    const toggleFollowing = (index) => {\n        setFollowingList(followingList.map(item => {\n            if(item.userId === index) {\n                return { ...item, isFollowing: !item.isFollowing }\n            }\n            return item;\n        }));\n        followingList.forEach(item => {\n            if(item.userId === index) {\n                db.collection(\"users\").doc(user.uid).collection(\"followings\").doc(index).get().then(doc => {\n                    doc.data() \n                    ? db.collection(\"users\").doc(user.uid).collection(\"followings\").doc(index).delete().then(() => (\n                        db.collection(\"users\").doc(index).collection(\"fans\").doc(user.uid).delete()\n                    ))\n                    : db.collection(\"users\").doc(user.uid).collection(\"followings\").doc(index).set({followingId: index}).then(() => (\n                        db.collection(\"users\").doc(index).collection(\"fans\").doc(user.uid).set({fanId: user.uid})\n                    ))\n                })\n                .catch(err => console.log(err))\n            }\n        });\n    }\n\n\n    return (\n        <div className={styles.followListContainer}>\n            {\n                followingList.map(following => {\n                    return (\n                        <div  className={styles.follow} key={following.userId}>\n                            <Link to={`/profile/${following.userId}/myRecipes`}>\n                                <div className={styles.user}>\n                                    <div className={styles.image}>\n                                        <img src={following.photoURL} alt=\"\"></img>\n                                    </div>\n                                    <div className={styles.info}>\n                                        <div className={styles.name}>{following.displayName}</div>\n                                        <div className={styles.details}>\n                                            <div className={styles.fans}>粉絲&nbsp;{following.fans}</div>\n                                            <div className={styles.recipes}>食譜&nbsp;{following.recipes}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Link>\n                            <div className={styles.followBtn}>\n                                {\n                                    following.isFollowing \n                                    ? <button className={styles.greyBtn} onClick={() => toggleFollowing(following.userId)}><FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>&nbsp;已追蹤</button>\n                                    : <button className={styles.darkBtn} onClick={() => toggleFollowing(following.userId)}>追蹤</button>\n                                }\n                            </div>\n                        </div>\n                    )\n                })\n\n            }\n        </div>\n    )\n}\n\nexport default FollowList;","/Users/rosechen/EatHealth/eat-health/src/Components/Steps/Steps.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/CategoryBox/CategoryBox.js",[],"/Users/rosechen/EatHealth/eat-health/src/Components/RecommendedBox/RecommendedBox.js",[],{"ruleId":"170","severity":1,"message":"171","line":2,"column":27,"nodeType":"172","messageId":"173","endLine":2,"endColumn":33},{"ruleId":"170","severity":1,"message":"174","line":3,"column":16,"nodeType":"172","messageId":"173","endLine":3,"endColumn":18},{"ruleId":"170","severity":1,"message":"175","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":14},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"176","replacedBy":"180"},{"ruleId":"178","replacedBy":"181"},{"ruleId":"170","severity":1,"message":"171","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":33},{"ruleId":"170","severity":1,"message":"182","line":1,"column":35,"nodeType":"172","messageId":"173","endLine":1,"endColumn":41},{"ruleId":"170","severity":1,"message":"183","line":1,"column":43,"nodeType":"172","messageId":"173","endLine":1,"endColumn":48},{"ruleId":"170","severity":1,"message":"184","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":19},{"ruleId":"170","severity":1,"message":"185","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":18},{"ruleId":"170","severity":1,"message":"186","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":21},{"ruleId":"187","severity":1,"message":"188","line":39,"column":6,"nodeType":"189","endLine":39,"endColumn":11,"suggestions":"190"},{"ruleId":"176","replacedBy":"191"},{"ruleId":"178","replacedBy":"192"},{"ruleId":"170","severity":1,"message":"193","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":25},{"ruleId":"170","severity":1,"message":"194","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":17},{"ruleId":"170","severity":1,"message":"195","line":3,"column":19,"nodeType":"172","messageId":"173","endLine":3,"endColumn":31},{"ruleId":"170","severity":1,"message":"171","line":4,"column":27,"nodeType":"172","messageId":"173","endLine":4,"endColumn":33},{"ruleId":"170","severity":1,"message":"182","line":4,"column":35,"nodeType":"172","messageId":"173","endLine":4,"endColumn":41},{"ruleId":"170","severity":1,"message":"183","line":4,"column":43,"nodeType":"172","messageId":"173","endLine":4,"endColumn":48},{"ruleId":"170","severity":1,"message":"196","line":4,"column":50,"nodeType":"172","messageId":"173","endLine":4,"endColumn":54},{"ruleId":"170","severity":1,"message":"197","line":4,"column":56,"nodeType":"172","messageId":"173","endLine":4,"endColumn":66},{"ruleId":"170","severity":1,"message":"198","line":4,"column":94,"nodeType":"172","messageId":"173","endLine":4,"endColumn":101},{"ruleId":"170","severity":1,"message":"199","line":13,"column":11,"nodeType":"172","messageId":"173","endLine":13,"endColumn":15},{"ruleId":"170","severity":1,"message":"200","line":13,"column":17,"nodeType":"172","messageId":"173","endLine":13,"endColumn":20},{"ruleId":"187","severity":1,"message":"201","line":63,"column":8,"nodeType":"189","endLine":63,"endColumn":20,"suggestions":"202"},{"ruleId":"170","severity":1,"message":"171","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":33},{"ruleId":"170","severity":1,"message":"182","line":1,"column":35,"nodeType":"172","messageId":"173","endLine":1,"endColumn":41},{"ruleId":"170","severity":1,"message":"183","line":1,"column":43,"nodeType":"172","messageId":"173","endLine":1,"endColumn":48},{"ruleId":"170","severity":1,"message":"197","line":1,"column":56,"nodeType":"172","messageId":"173","endLine":1,"endColumn":66},{"ruleId":"170","severity":1,"message":"203","line":1,"column":68,"nodeType":"172","messageId":"173","endLine":1,"endColumn":81},{"ruleId":"170","severity":1,"message":"204","line":2,"column":31,"nodeType":"172","messageId":"173","endLine":2,"endColumn":37},{"ruleId":"170","severity":1,"message":"205","line":12,"column":8,"nodeType":"172","messageId":"173","endLine":12,"endColumn":16},{"ruleId":"187","severity":1,"message":"206","line":98,"column":8,"nodeType":"189","endLine":98,"endColumn":35,"suggestions":"207"},{"ruleId":"170","severity":1,"message":"208","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":18},{"ruleId":"170","severity":1,"message":"171","line":2,"column":27,"nodeType":"172","messageId":"173","endLine":2,"endColumn":33},{"ruleId":"170","severity":1,"message":"197","line":2,"column":65,"nodeType":"172","messageId":"173","endLine":2,"endColumn":75},{"ruleId":"187","severity":1,"message":"206","line":55,"column":8,"nodeType":"189","endLine":55,"endColumn":16,"suggestions":"209"},{"ruleId":"170","severity":1,"message":"182","line":2,"column":20,"nodeType":"172","messageId":"173","endLine":2,"endColumn":26},{"ruleId":"170","severity":1,"message":"210","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":15},{"ruleId":"187","severity":1,"message":"211","line":27,"column":8,"nodeType":"189","endLine":27,"endColumn":10,"suggestions":"212"},{"ruleId":"170","severity":1,"message":"171","line":4,"column":27,"nodeType":"172","messageId":"173","endLine":4,"endColumn":33},{"ruleId":"170","severity":1,"message":"182","line":4,"column":35,"nodeType":"172","messageId":"173","endLine":4,"endColumn":41},{"ruleId":"170","severity":1,"message":"183","line":4,"column":43,"nodeType":"172","messageId":"173","endLine":4,"endColumn":48},{"ruleId":"170","severity":1,"message":"197","line":4,"column":56,"nodeType":"172","messageId":"173","endLine":4,"endColumn":66},{"ruleId":"170","severity":1,"message":"203","line":4,"column":68,"nodeType":"172","messageId":"173","endLine":4,"endColumn":81},{"ruleId":"170","severity":1,"message":"213","line":4,"column":83,"nodeType":"172","messageId":"173","endLine":4,"endColumn":92},{"ruleId":"170","severity":1,"message":"198","line":4,"column":94,"nodeType":"172","messageId":"173","endLine":4,"endColumn":101},{"ruleId":"187","severity":1,"message":"214","line":35,"column":8,"nodeType":"189","endLine":35,"endColumn":10,"suggestions":"215"},{"ruleId":"170","severity":1,"message":"171","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":33},{"ruleId":"170","severity":1,"message":"182","line":1,"column":35,"nodeType":"172","messageId":"173","endLine":1,"endColumn":41},{"ruleId":"170","severity":1,"message":"183","line":1,"column":43,"nodeType":"172","messageId":"173","endLine":1,"endColumn":48},{"ruleId":"170","severity":1,"message":"203","line":1,"column":50,"nodeType":"172","messageId":"173","endLine":1,"endColumn":63},{"ruleId":"170","severity":1,"message":"197","line":1,"column":65,"nodeType":"172","messageId":"173","endLine":1,"endColumn":75},{"ruleId":"170","severity":1,"message":"198","line":1,"column":77,"nodeType":"172","messageId":"173","endLine":1,"endColumn":84},{"ruleId":"170","severity":1,"message":"213","line":2,"column":16,"nodeType":"172","messageId":"173","endLine":2,"endColumn":25},{"ruleId":"187","severity":1,"message":"216","line":55,"column":8,"nodeType":"189","endLine":55,"endColumn":20,"suggestions":"217"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'db' is defined but never used.","'Footer' is defined but never used.","no-native-reassign",["218"],"no-negated-in-lhs",["219"],["218"],["219"],"'Switch' is defined but never used.","'Route' is defined but never used.","'useEffect' is defined but never used.","'faSearch' is defined but never used.","'defaultAvatar' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'postRecipe'. Either include it or remove the dependency array.","ArrayExpression",["220"],["218"],["219"],"'FontAwesomeIcon' is defined but never used.","'faHeart' is defined but never used.","'faCommentAlt' is defined but never used.","'Link' is defined but never used.","'useHistory' is defined but never used.","'NavLink' is defined but never used.","'path' is assigned a value but never used.","'url' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["221"],"'useRouteMatch' is defined but never used.","'useRef' is defined but never used.","'firebase' is defined but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["222"],"'useState' is defined but never used.",["223"],"'loading' is defined but never used.","React Hook useEffect has a missing dependency: 'recipeId'. Either include it or remove the dependency array.",["224"],"'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'recipe.id' and 'recipeData'. Either include them or remove the dependency array. You can also do a functional update 'setRecipeData(r => ...)' if you only need 'recipeData' in the 'setRecipeData' call.",["225"],"React Hook useEffect has a missing dependency: 'user.uid'. Either include it or remove the dependency array.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},"Update the dependencies array to be: [postRecipe, url]",{"range":"241","text":"242"},"Update the dependencies array to be: [subProfile, userId]",{"range":"243","text":"244"},"Update the dependencies array to be: [recipe.authorId, recipeId, user]",{"range":"245","text":"246"},"Update the dependencies array to be: [user, userId]",{"range":"247","text":"248"},"Update the dependencies array to be: [recipeId]",{"range":"249","text":"250"},"Update the dependencies array to be: [recipe.id, recipeData]",{"range":"251","text":"252"},"Update the dependencies array to be: [followings, user.uid]",{"range":"253","text":"254"},[3051,3056],"[postRecipe, url]",[2649,2661],"[subProfile, userId]",[4405,4432],"[recipe.authorId, recipeId, user]",[2006,2014],"[user, userId]",[976,978],"[recipeId]",[1463,1465],"[recipe.id, recipeData]",[2359,2371],"[followings, user.uid]"]